"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const anchor_1 = require("@project-serum/anchor");
const mango_logs_json_1 = __importDefault(require("./mango_logs.json"));
const ids_json_1 = __importDefault(require("./ids.json"));
const config_1 = require("./config");
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        const config = new config_1.Config(ids_json_1.default);
        const cluster = (process.env.CLUSTER || 'devnet');
        const groupName = process.env.GROUP || 'devnet.2';
        const groupIds = config.getGroup(cluster, groupName);
        if (!groupIds) {
            throw new Error(`Group ${groupName} not found`);
        }
        // @ts-ignore
        const coder = new anchor_1.Coder(mango_logs_json_1.default);
        // Parse entire logs
        // const logs = [];
        // const parser = new EventParser(groupIds.mangoProgramId, coder);
        // parser.parseLogs(logs, (event) => console.log(event));
        // Parse a single log.
        const logs = [
            'lhcplJii10DKISAtTF7lMdQarmxDZG/wXw1EdsMrRmiMvKrmbhkiIQABAFvkVGEAAAAAxi0BAAAAAAC4kVf55PTy0BmUBbr41IxHf1A9JU8WSrCUWGSI8WTJlDZfEAAAAAAAF1AGAAAAAACA+ZszfAEAAAAAAAAAAAAAAAAAAAAAAADAtgYAAAAAAFjkVGEAAAAARuIL33wGLo2fQ4HMUgyFM8qr6nKFpEX/UaC1A8l4kMPEoO///////yOhBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1AGAAAAAAABAAAAAAAAAA==',
            'F5qwwQsqqPTKISAtTF7lMdQarmxDZG/wXw1EdsMrRmiMvKrmbhkiIUbiC998Bi6Nn0OBzFIMhTPKq+pyhaRF/1GgtQPJeJDDDwAAAAAAAAAOFBvX6NFKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==',
            'ux0uSxX5tBvKISAtTF7lMdQarmxDZG/wXw1EdsMrRmiMvKrmbhkiIQcAAAAAAAAAAAAAAAEAAAAAAAAAAgAAAAAAAAADAAAAAAAAAAQAAAAAAAAABQAAAAAAAAAGAAAAAAAAAAcAAADhehSuR00AAAAAAAAAAAAALbKd76cG8qAAAAAAAAAAANk9eViopQMLAAAAAAAAAABjeVc9YCIAAAAAAAAAAAAAq63YX3bnBgAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAACqz9VW7P8AAAAAAAAAAAAA',
            'V4pUNuOCxqzKISAtTF7lMdQarmxDZG/wXw1EdsMrRmiMvKrmbhkiIUbiC998Bi6Nn0OBzFIMhTPKq+pyhaRF/1GgtQPJeJDDAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',
        ];
        for (const log of logs) {
            const event = coder.events.decode(log);
            // if (event && event.data.oraclePrices) {
            //   // @ts-ignore
            //   for (const priceBn of event.data.oraclePrices) {
            //     const price = new I80F48(priceBn).toNumber();
            //     console.log(price);
            //   }
            // }
            console.log(event);
        }
    });
}
main();
//# sourceMappingURL=scratch.js.map