{"ast":null,"code":"var _jsxFileName = \"/Users/zohebshahzan/code/Solana-2/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Container } from 'reactstrap';\nimport { CustomNavbar } from './components/CustomNavbar';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { GlobalState } from './store/globalState';\nimport { InitialisedFund } from './components/InitialisedFund';\nimport { Deposit } from './components/Deposit';\nimport { Withdraw } from './components/Withdraw'; // import { Claim } from './components/ClaimFee';\n\nimport { DisplayInfo } from './components/DisplayInfo';\nimport { AllFundsInvestors } from './components/AllFundsInvestors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const walletProvider = GlobalState.useState(s => s.walletProvider);\n  const address = GlobalState.useState(s => s.address);\n  const [transactions, setTransactions] = useState([]); // useEffect(() => {\n  //   if (walletProvider?.publicKey) {\n  //     console.log(`walletProvider?.publicKey ::: `, walletProvider?.publicKey)\n  //     getTransactions(connection, walletProvider.publicKey).then((trans) => {\n  //       console.log(`trans ::: `, trans)\n  //       setTransactions(trans);\n  //     });\n  //   }\n  // }, [walletProvider])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), address && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected to \", address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DisplayInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(InitialisedFund, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Deposit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Withdraw, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MangoPlaceOrder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AllFundsInvestors, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"U0r3xPwJmzdHjClAdxvOdRzCc3c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/zohebshahzan/code/Solana-2/frontend/src/App.js"],"names":["Container","CustomNavbar","useEffect","useState","GlobalState","InitialisedFund","Deposit","Withdraw","DisplayInfo","AllFundsInvestors","App","walletProvider","s","address","transactions","setTransactions"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAO,WAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,QAAT,QAAyB,uBAAzB,C,CACA;;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,cAAc,GAAGP,WAAW,CAACD,QAAZ,CAAqBS,CAAC,IAAIA,CAAC,CAACD,cAA5B,CAAvB;AACA,QAAME,OAAO,GAAGT,WAAW,CAACD,QAAZ,CAAqBS,CAAC,IAAIA,CAAC,CAACC,OAA5B,CAAhB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD,CAHa,CAKb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAGIU,OAAO,iBACP;AAAA,oCAAiBA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eASG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cATH,eAUE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAZF,eAcE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GApCQH,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import { Container } from 'reactstrap';\nimport { CustomNavbar } from './components/CustomNavbar';\nimport './App.css';\nimport { useEffect, useState } from 'react';\n\nimport { GlobalState } from './store/globalState'\nimport { InitialisedFund } from './components/InitialisedFund';\nimport { Deposit } from './components/Deposit';\nimport { Withdraw } from './components/Withdraw';\n// import { Claim } from './components/ClaimFee';\nimport { DisplayInfo } from './components/DisplayInfo';\nimport { AllFundsInvestors } from './components/AllFundsInvestors';\n\n\nfunction App() {\n  const walletProvider = GlobalState.useState(s => s.walletProvider);\n  const address = GlobalState.useState(s => s.address);\n  const [transactions, setTransactions] = useState([]);\n\n  // useEffect(() => {\n  //   if (walletProvider?.publicKey) {\n  //     console.log(`walletProvider?.publicKey ::: `, walletProvider?.publicKey)\n  //     getTransactions(connection, walletProvider.publicKey).then((trans) => {\n  //       console.log(`trans ::: `, trans)\n  //       setTransactions(trans);\n  //     });\n  //   }\n  // }, [walletProvider])\n\n  return (\n    <div>\n      <Container>\n        <CustomNavbar />\n        {\n          address &&\n          <p>Connected to {address}</p>\n        }\n        {/* {\n          transactions && <TransactionsView transactions={transactions} />\n        } */}\n         <DisplayInfo/>\n        <InitialisedFund />\n        <Deposit />\n        <Withdraw />\n        {/* <Claim /> */}\n        <MangoPlaceOrder />\n        <AllFundsInvestors/>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}