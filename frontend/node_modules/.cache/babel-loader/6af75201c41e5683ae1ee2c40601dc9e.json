{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Config = exports.getTokenBySymbol = exports.getTokenByMint = exports.getMarketByPublicKey = exports.getMarketByBaseSymbolAndKind = exports.getAllMarkets = exports.getSpotMarketByBaseSymbol = exports.getPerpMarketByIndex = exports.getPerpMarketByBaseSymbol = exports.getOracleBySymbol = exports.getMarketIndexBySymbol = exports.mngoMints = exports.msrmMints = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst ids_json_1 = __importDefault(require(\"./ids.json\"));\n\nconst utils_1 = require(\"./utils/utils\");\n\nexports.msrmMints = {\n  devnet: new web3_js_1.PublicKey('8DJBo4bF4mHNxobjdax3BL9RMh5o71Jf8UiKsf5C5eVH'),\n  mainnet: new web3_js_1.PublicKey('MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L'),\n  localnet: utils_1.zeroKey,\n  testnet: utils_1.zeroKey\n};\nexports.mngoMints = {\n  devnet: new web3_js_1.PublicKey('Bb9bsTQa1bGEtQ5KagGkvSHyuLqDWumFUcRqFusFNJWC'),\n  mainnet: new web3_js_1.PublicKey('MangoCzJ36AjZyKwVj3VnYU4GTonjfVEnJmvvWaxLac')\n};\n\nfunction oracleConfigFromJson(j) {\n  return Object.assign(Object.assign({}, j), {\n    publicKey: new web3_js_1.PublicKey(j.publicKey)\n  });\n}\n\nfunction oracleConfigToJson(o) {\n  return Object.assign(Object.assign({}, o), {\n    publicKey: o.publicKey.toBase58()\n  });\n}\n\nfunction spotMarketConfigFromJson(j) {\n  return Object.assign(Object.assign({}, j), {\n    publicKey: new web3_js_1.PublicKey(j.publicKey),\n    bidsKey: new web3_js_1.PublicKey(j.bidsKey),\n    asksKey: new web3_js_1.PublicKey(j.asksKey),\n    eventsKey: new web3_js_1.PublicKey(j.eventsKey)\n  });\n}\n\nfunction spotMarketConfigToJson(p) {\n  return Object.assign(Object.assign({}, p), {\n    publicKey: p.publicKey.toBase58(),\n    bidsKey: p.bidsKey.toBase58(),\n    asksKey: p.asksKey.toBase58(),\n    eventsKey: p.eventsKey.toBase58()\n  });\n}\n\nfunction perpMarketConfigFromJson(j) {\n  return Object.assign(Object.assign({}, j), {\n    publicKey: new web3_js_1.PublicKey(j.publicKey),\n    bidsKey: new web3_js_1.PublicKey(j.bidsKey),\n    asksKey: new web3_js_1.PublicKey(j.asksKey),\n    eventsKey: new web3_js_1.PublicKey(j.eventsKey)\n  });\n}\n\nfunction perpMarketConfigToJson(p) {\n  return Object.assign(Object.assign({}, p), {\n    publicKey: p.publicKey.toBase58(),\n    bidsKey: p.bidsKey.toBase58(),\n    asksKey: p.asksKey.toBase58(),\n    eventsKey: p.eventsKey.toBase58()\n  });\n}\n\nfunction tokenConfigFromJson(j) {\n  return Object.assign(Object.assign({}, j), {\n    mintKey: new web3_js_1.PublicKey(j.mintKey),\n    rootKey: new web3_js_1.PublicKey(j.rootKey),\n    nodeKeys: j.nodeKeys.map(k => new web3_js_1.PublicKey(k))\n  });\n}\n\nfunction tokenConfigToJson(t) {\n  return Object.assign(Object.assign({}, t), {\n    mintKey: t.mintKey.toBase58(),\n    rootKey: t.rootKey.toBase58(),\n    nodeKeys: t.nodeKeys.map(k => k.toBase58())\n  });\n}\n\nfunction getMarketIndexBySymbol(group, symbol) {\n  return group.oracles.findIndex(o => o.symbol === symbol);\n}\n\nexports.getMarketIndexBySymbol = getMarketIndexBySymbol;\n\nfunction getOracleBySymbol(group, symbol) {\n  return group.oracles.find(o => o.symbol === symbol);\n}\n\nexports.getOracleBySymbol = getOracleBySymbol;\n\nfunction getPerpMarketByBaseSymbol(group, symbol) {\n  return group.perpMarkets.find(p => p.baseSymbol === symbol);\n}\n\nexports.getPerpMarketByBaseSymbol = getPerpMarketByBaseSymbol;\n\nfunction getPerpMarketByIndex(group, marketIndex) {\n  return group.perpMarkets.find(p => p.marketIndex === marketIndex);\n}\n\nexports.getPerpMarketByIndex = getPerpMarketByIndex;\n\nfunction getSpotMarketByBaseSymbol(group, symbol) {\n  return group.spotMarkets.find(p => p.baseSymbol === symbol);\n}\n\nexports.getSpotMarketByBaseSymbol = getSpotMarketByBaseSymbol;\n\nfunction getAllMarkets(group) {\n  const spotMarkets = group.spotMarkets.map(m => Object.assign({\n    kind: 'spot'\n  }, m));\n  const perpMarkets = group.perpMarkets.map(m => Object.assign({\n    kind: 'perp'\n  }, m));\n  return spotMarkets.concat(perpMarkets);\n}\n\nexports.getAllMarkets = getAllMarkets;\n\nfunction getMarketByBaseSymbolAndKind(group, symbol, kind) {\n  const market = kind === 'spot' ? getSpotMarketByBaseSymbol(group, symbol) : getPerpMarketByBaseSymbol(group, symbol);\n  return Object.assign({\n    kind\n  }, market);\n}\n\nexports.getMarketByBaseSymbolAndKind = getMarketByBaseSymbolAndKind;\n\nfunction getMarketByPublicKey(group, key) {\n  if (!(key instanceof web3_js_1.PublicKey)) {\n    key = new web3_js_1.PublicKey(key);\n  }\n\n  const spot = group.spotMarkets.find(m => m.publicKey.equals(key));\n\n  if (spot) {\n    return Object.assign({\n      kind: 'spot'\n    }, spot);\n  }\n\n  const perp = group.perpMarkets.find(m => m.publicKey.equals(key));\n\n  if (perp) {\n    return Object.assign({\n      kind: 'perp'\n    }, perp);\n  }\n}\n\nexports.getMarketByPublicKey = getMarketByPublicKey;\n\nfunction getTokenByMint(group, mint) {\n  if (!(mint instanceof web3_js_1.PublicKey)) {\n    mint = new web3_js_1.PublicKey(mint);\n  }\n\n  return group.tokens.find(t => t.mintKey.equals(mint));\n}\n\nexports.getTokenByMint = getTokenByMint;\n\nfunction getTokenBySymbol(group, symbol) {\n  const tokenConfig = group.tokens.find(t => t.symbol === symbol);\n\n  if (tokenConfig === undefined) {\n    throw new Error(`Unable to find symbol: ${symbol} in GroupConfig`);\n  }\n\n  return tokenConfig;\n}\n\nexports.getTokenBySymbol = getTokenBySymbol; // export function getTokenBySymbol(group: GroupConfig, symbol: string) {\n//   return group.tokens.find((t) => t.symbol === symbol);\n// }\n\nfunction groupConfigFromJson(j) {\n  return Object.assign(Object.assign({}, j), {\n    publicKey: new web3_js_1.PublicKey(j.publicKey),\n    mangoProgramId: new web3_js_1.PublicKey(j.mangoProgramId),\n    serumProgramId: new web3_js_1.PublicKey(j.serumProgramId),\n    oracles: j.oracles.map(o => oracleConfigFromJson(o)),\n    perpMarkets: j.perpMarkets.map(p => perpMarketConfigFromJson(p)),\n    spotMarkets: j.spotMarkets.map(p => spotMarketConfigFromJson(p)),\n    tokens: j.tokens.map(t => tokenConfigFromJson(t))\n  });\n}\n\nfunction groupConfigToJson(g) {\n  return Object.assign(Object.assign({}, g), {\n    publicKey: g.publicKey.toBase58(),\n    mangoProgramId: g.mangoProgramId.toBase58(),\n    serumProgramId: g.serumProgramId.toBase58(),\n    oracles: g.oracles.map(o => oracleConfigToJson(o)),\n    perpMarkets: g.perpMarkets.map(p => perpMarketConfigToJson(p)),\n    spotMarkets: g.spotMarkets.map(p => spotMarketConfigToJson(p)),\n    tokens: g.tokens.map(t => tokenConfigToJson(t))\n  });\n}\n\nclass Config {\n  constructor(json) {\n    this.cluster_urls = json.cluster_urls;\n    this.groups = json.groups.map(g => groupConfigFromJson(g));\n  }\n\n  static ids() {\n    return staticConfig;\n  }\n\n  toJson() {\n    return Object.assign(Object.assign({}, this), {\n      groups: this.groups.map(g => groupConfigToJson(g))\n    });\n  }\n\n  getGroup(cluster, name) {\n    return this.groups.find(g => g.cluster === cluster && g.name === name);\n  }\n\n  getGroupWithName(name) {\n    return this.groups.find(g => g.name === name);\n  }\n\n  storeGroup(group) {\n    const _group = this.getGroup(group.cluster, group.name);\n\n    if (_group) {\n      Object.assign(_group, group);\n    } else {\n      this.groups.unshift(group);\n    }\n  }\n\n}\n\nexports.Config = Config;\nconst staticConfig = new Config(ids_json_1.default);","map":{"version":3,"sources":["../../src/config.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Config = exports.getTokenBySymbol = exports.getTokenByMint = exports.getMarketByPublicKey = exports.getMarketByBaseSymbolAndKind = exports.getAllMarkets = exports.getSpotMarketByBaseSymbol = exports.getPerpMarketByIndex = exports.getPerpMarketByBaseSymbol = exports.getOracleBySymbol = exports.getMarketIndexBySymbol = exports.mngoMints = exports.msrmMints = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst ids_json_1 = __importDefault(require(\"./ids.json\"));\nconst utils_1 = require(\"./utils/utils\");\nexports.msrmMints = {\n    devnet: new web3_js_1.PublicKey('8DJBo4bF4mHNxobjdax3BL9RMh5o71Jf8UiKsf5C5eVH'),\n    mainnet: new web3_js_1.PublicKey('MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L'),\n    localnet: utils_1.zeroKey,\n    testnet: utils_1.zeroKey,\n};\nexports.mngoMints = {\n    devnet: new web3_js_1.PublicKey('Bb9bsTQa1bGEtQ5KagGkvSHyuLqDWumFUcRqFusFNJWC'),\n    mainnet: new web3_js_1.PublicKey('MangoCzJ36AjZyKwVj3VnYU4GTonjfVEnJmvvWaxLac'),\n};\nfunction oracleConfigFromJson(j) {\n    return Object.assign(Object.assign({}, j), { publicKey: new web3_js_1.PublicKey(j.publicKey) });\n}\nfunction oracleConfigToJson(o) {\n    return Object.assign(Object.assign({}, o), { publicKey: o.publicKey.toBase58() });\n}\nfunction spotMarketConfigFromJson(j) {\n    return Object.assign(Object.assign({}, j), { publicKey: new web3_js_1.PublicKey(j.publicKey), bidsKey: new web3_js_1.PublicKey(j.bidsKey), asksKey: new web3_js_1.PublicKey(j.asksKey), eventsKey: new web3_js_1.PublicKey(j.eventsKey) });\n}\nfunction spotMarketConfigToJson(p) {\n    return Object.assign(Object.assign({}, p), { publicKey: p.publicKey.toBase58(), bidsKey: p.bidsKey.toBase58(), asksKey: p.asksKey.toBase58(), eventsKey: p.eventsKey.toBase58() });\n}\nfunction perpMarketConfigFromJson(j) {\n    return Object.assign(Object.assign({}, j), { publicKey: new web3_js_1.PublicKey(j.publicKey), bidsKey: new web3_js_1.PublicKey(j.bidsKey), asksKey: new web3_js_1.PublicKey(j.asksKey), eventsKey: new web3_js_1.PublicKey(j.eventsKey) });\n}\nfunction perpMarketConfigToJson(p) {\n    return Object.assign(Object.assign({}, p), { publicKey: p.publicKey.toBase58(), bidsKey: p.bidsKey.toBase58(), asksKey: p.asksKey.toBase58(), eventsKey: p.eventsKey.toBase58() });\n}\nfunction tokenConfigFromJson(j) {\n    return Object.assign(Object.assign({}, j), { mintKey: new web3_js_1.PublicKey(j.mintKey), rootKey: new web3_js_1.PublicKey(j.rootKey), nodeKeys: j.nodeKeys.map((k) => new web3_js_1.PublicKey(k)) });\n}\nfunction tokenConfigToJson(t) {\n    return Object.assign(Object.assign({}, t), { mintKey: t.mintKey.toBase58(), rootKey: t.rootKey.toBase58(), nodeKeys: t.nodeKeys.map((k) => k.toBase58()) });\n}\nfunction getMarketIndexBySymbol(group, symbol) {\n    return group.oracles.findIndex((o) => o.symbol === symbol);\n}\nexports.getMarketIndexBySymbol = getMarketIndexBySymbol;\nfunction getOracleBySymbol(group, symbol) {\n    return group.oracles.find((o) => o.symbol === symbol);\n}\nexports.getOracleBySymbol = getOracleBySymbol;\nfunction getPerpMarketByBaseSymbol(group, symbol) {\n    return group.perpMarkets.find((p) => p.baseSymbol === symbol);\n}\nexports.getPerpMarketByBaseSymbol = getPerpMarketByBaseSymbol;\nfunction getPerpMarketByIndex(group, marketIndex) {\n    return group.perpMarkets.find((p) => p.marketIndex === marketIndex);\n}\nexports.getPerpMarketByIndex = getPerpMarketByIndex;\nfunction getSpotMarketByBaseSymbol(group, symbol) {\n    return group.spotMarkets.find((p) => p.baseSymbol === symbol);\n}\nexports.getSpotMarketByBaseSymbol = getSpotMarketByBaseSymbol;\nfunction getAllMarkets(group) {\n    const spotMarkets = group.spotMarkets.map((m) => (Object.assign({ kind: 'spot' }, m)));\n    const perpMarkets = group.perpMarkets.map((m) => (Object.assign({ kind: 'perp' }, m)));\n    return spotMarkets.concat(perpMarkets);\n}\nexports.getAllMarkets = getAllMarkets;\nfunction getMarketByBaseSymbolAndKind(group, symbol, kind) {\n    const market = kind === 'spot'\n        ? getSpotMarketByBaseSymbol(group, symbol)\n        : getPerpMarketByBaseSymbol(group, symbol);\n    return Object.assign({ kind }, market);\n}\nexports.getMarketByBaseSymbolAndKind = getMarketByBaseSymbolAndKind;\nfunction getMarketByPublicKey(group, key) {\n    if (!(key instanceof web3_js_1.PublicKey)) {\n        key = new web3_js_1.PublicKey(key);\n    }\n    const spot = group.spotMarkets.find((m) => m.publicKey.equals(key));\n    if (spot) {\n        return Object.assign({ kind: 'spot' }, spot);\n    }\n    const perp = group.perpMarkets.find((m) => m.publicKey.equals(key));\n    if (perp) {\n        return Object.assign({ kind: 'perp' }, perp);\n    }\n}\nexports.getMarketByPublicKey = getMarketByPublicKey;\nfunction getTokenByMint(group, mint) {\n    if (!(mint instanceof web3_js_1.PublicKey)) {\n        mint = new web3_js_1.PublicKey(mint);\n    }\n    return group.tokens.find((t) => t.mintKey.equals(mint));\n}\nexports.getTokenByMint = getTokenByMint;\nfunction getTokenBySymbol(group, symbol) {\n    const tokenConfig = group.tokens.find((t) => t.symbol === symbol);\n    if (tokenConfig === undefined) {\n        throw new Error(`Unable to find symbol: ${symbol} in GroupConfig`);\n    }\n    return tokenConfig;\n}\nexports.getTokenBySymbol = getTokenBySymbol;\n// export function getTokenBySymbol(group: GroupConfig, symbol: string) {\n//   return group.tokens.find((t) => t.symbol === symbol);\n// }\nfunction groupConfigFromJson(j) {\n    return Object.assign(Object.assign({}, j), { publicKey: new web3_js_1.PublicKey(j.publicKey), mangoProgramId: new web3_js_1.PublicKey(j.mangoProgramId), serumProgramId: new web3_js_1.PublicKey(j.serumProgramId), oracles: j.oracles.map((o) => oracleConfigFromJson(o)), perpMarkets: j.perpMarkets.map((p) => perpMarketConfigFromJson(p)), spotMarkets: j.spotMarkets.map((p) => spotMarketConfigFromJson(p)), tokens: j.tokens.map((t) => tokenConfigFromJson(t)) });\n}\nfunction groupConfigToJson(g) {\n    return Object.assign(Object.assign({}, g), { publicKey: g.publicKey.toBase58(), mangoProgramId: g.mangoProgramId.toBase58(), serumProgramId: g.serumProgramId.toBase58(), oracles: g.oracles.map((o) => oracleConfigToJson(o)), perpMarkets: g.perpMarkets.map((p) => perpMarketConfigToJson(p)), spotMarkets: g.spotMarkets.map((p) => spotMarketConfigToJson(p)), tokens: g.tokens.map((t) => tokenConfigToJson(t)) });\n}\nclass Config {\n    constructor(json) {\n        this.cluster_urls = json.cluster_urls;\n        this.groups = json.groups.map((g) => groupConfigFromJson(g));\n    }\n    static ids() {\n        return staticConfig;\n    }\n    toJson() {\n        return Object.assign(Object.assign({}, this), { groups: this.groups.map((g) => groupConfigToJson(g)) });\n    }\n    getGroup(cluster, name) {\n        return this.groups.find((g) => g.cluster === cluster && g.name === name);\n    }\n    getGroupWithName(name) {\n        return this.groups.find((g) => g.name === name);\n    }\n    storeGroup(group) {\n        const _group = this.getGroup(group.cluster, group.name);\n        if (_group) {\n            Object.assign(_group, group);\n        }\n        else {\n            this.groups.unshift(group);\n        }\n    }\n}\nexports.Config = Config;\nconst staticConfig = new Config(ids_json_1.default);\n//# sourceMappingURL=config.js.map"]},"metadata":{},"sourceType":"script"}