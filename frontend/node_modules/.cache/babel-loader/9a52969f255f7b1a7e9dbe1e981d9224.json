{"ast":null,"code":"import BigNumber from 'bignumber.js'; // https://github.com/MikeMcl/bignumber.js\n// https://blog.csdn.net/shenxianhui1995/article/details/103985434\n\nexport class TokenAmount {\n  constructor(wei) {\n    let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let isWei = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    this.decimals = decimals;\n    this._decimals = new BigNumber(10).exponentiatedBy(decimals);\n\n    if (isWei) {\n      this.wei = new BigNumber(wei);\n    } else {\n      this.wei = new BigNumber(wei).multipliedBy(this._decimals);\n    }\n  }\n\n  toEther() {\n    return this.wei.dividedBy(this._decimals);\n  }\n\n  toWei() {\n    return this.wei;\n  }\n\n  format() {\n    const vaule = this.wei.dividedBy(this._decimals);\n    return vaule.toFormat(vaule.isInteger() ? 0 : this.decimals);\n  }\n\n  fixed() {\n    return this.wei.dividedBy(this._decimals).toFixed(this.decimals);\n  }\n\n  isNullOrZero() {\n    return this.wei.isNaN() || this.wei.isZero();\n  } // + plus\n  // - minus\n  // × multipliedBy\n  // ÷ dividedBy\n\n\n} // >\n\nexport function gt(a, b) {\n  const valueA = new BigNumber(a);\n  const valueB = new BigNumber(b);\n  return valueA.isGreaterThan(valueB);\n} // >=\n\nexport function gte(a, b) {\n  const valueA = new BigNumber(a);\n  const valueB = new BigNumber(b);\n  return valueA.isGreaterThanOrEqualTo(valueB);\n} // <\n\nexport function lt(a, b) {\n  const valueA = new BigNumber(a);\n  const valueB = new BigNumber(b);\n  return valueA.isLessThan(valueB);\n} // <=\n\nexport function lte(a, b) {\n  const valueA = new BigNumber(a);\n  const valueB = new BigNumber(b);\n  return valueA.isLessThanOrEqualTo(valueB);\n}\nexport function isNullOrZero(value) {\n  const amount = new BigNumber(value);\n  return amount.isNaN() || amount.isZero();\n}","map":{"version":3,"sources":["/Users/zohebshahzan/code/Solana-2/frontend/src/utils/safe-math.js"],"names":["BigNumber","TokenAmount","constructor","wei","decimals","isWei","_decimals","exponentiatedBy","multipliedBy","toEther","dividedBy","toWei","format","vaule","toFormat","isInteger","fixed","toFixed","isNullOrZero","isNaN","isZero","gt","a","b","valueA","valueB","isGreaterThan","gte","isGreaterThanOrEqualTo","lt","isLessThan","lte","isLessThanOrEqualTo","value","amount"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB,C,CAEA;AACA;;AACA,OAAO,MAAMC,WAAN,CAAkB;AAMvBC,EAAAA,WAAW,CAACC,GAAD,EAAkC;AAAA,QAA5BC,QAA4B,uEAAjB,CAAiB;AAAA,QAAdC,KAAc,uEAAN,IAAM;AAC3C,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKE,SAAL,GAAiB,IAAIN,SAAJ,CAAc,EAAd,EAAkBO,eAAlB,CAAkCH,QAAlC,CAAjB;;AAEA,QAAIC,KAAJ,EAAW;AACT,WAAKF,GAAL,GAAW,IAAIH,SAAJ,CAAcG,GAAd,CAAX;AACD,KAFD,MAEO;AACL,WAAKA,GAAL,GAAW,IAAIH,SAAJ,CAAcG,GAAd,EAAmBK,YAAnB,CAAgC,KAAKF,SAArC,CAAX;AACD;AACF;;AAEDG,EAAAA,OAAO,GAAG;AACR,WAAO,KAAKN,GAAL,CAASO,SAAT,CAAmB,KAAKJ,SAAxB,CAAP;AACD;;AAEDK,EAAAA,KAAK,GAAG;AACN,WAAO,KAAKR,GAAZ;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKV,GAAL,CAASO,SAAT,CAAmB,KAAKJ,SAAxB,CAAd;AACA,WAAOO,KAAK,CAACC,QAAN,CAAeD,KAAK,CAACE,SAAN,KAAoB,CAApB,GAAwB,KAAKX,QAA5C,CAAP;AACD;;AAEDY,EAAAA,KAAK,GAAG;AACN,WAAO,KAAKb,GAAL,CAASO,SAAT,CAAmB,KAAKJ,SAAxB,EAAmCW,OAAnC,CAA2C,KAAKb,QAAhD,CAAP;AACD;;AAEDc,EAAAA,YAAY,GAAG;AACb,WAAO,KAAKf,GAAL,CAASgB,KAAT,MAAoB,KAAKhB,GAAL,CAASiB,MAAT,EAA3B;AACD,GApCsB,CAqCvB;AACA;AACA;AACA;;;AAxCuB,C,CA2CzB;;AACA,OAAO,SAASC,EAAT,CAAYC,CAAZ,EAAeC,CAAf,EAAkB;AACvB,QAAMC,MAAM,GAAG,IAAIxB,SAAJ,CAAcsB,CAAd,CAAf;AACA,QAAMG,MAAM,GAAG,IAAIzB,SAAJ,CAAcuB,CAAd,CAAf;AAEA,SAAOC,MAAM,CAACE,aAAP,CAAqBD,MAArB,CAAP;AACD,C,CAED;;AACA,OAAO,SAASE,GAAT,CAAaL,CAAb,EAAgBC,CAAhB,EAAmB;AACxB,QAAMC,MAAM,GAAG,IAAIxB,SAAJ,CAAcsB,CAAd,CAAf;AACA,QAAMG,MAAM,GAAG,IAAIzB,SAAJ,CAAcuB,CAAd,CAAf;AAEA,SAAOC,MAAM,CAACI,sBAAP,CAA8BH,MAA9B,CAAP;AACD,C,CAED;;AACA,OAAO,SAASI,EAAT,CAAYP,CAAZ,EAAeC,CAAf,EAAkB;AACvB,QAAMC,MAAM,GAAG,IAAIxB,SAAJ,CAAcsB,CAAd,CAAf;AACA,QAAMG,MAAM,GAAG,IAAIzB,SAAJ,CAAcuB,CAAd,CAAf;AAEA,SAAOC,MAAM,CAACM,UAAP,CAAkBL,MAAlB,CAAP;AACD,C,CAED;;AACA,OAAO,SAASM,GAAT,CAAaT,CAAb,EAAgBC,CAAhB,EAAmB;AACxB,QAAMC,MAAM,GAAG,IAAIxB,SAAJ,CAAcsB,CAAd,CAAf;AACA,QAAMG,MAAM,GAAG,IAAIzB,SAAJ,CAAcuB,CAAd,CAAf;AAEA,SAAOC,MAAM,CAACQ,mBAAP,CAA2BP,MAA3B,CAAP;AACD;AAED,OAAO,SAASP,YAAT,CAAsBe,KAAtB,EAA6B;AAClC,QAAMC,MAAM,GAAG,IAAIlC,SAAJ,CAAciC,KAAd,CAAf;AAEA,SAAOC,MAAM,CAACf,KAAP,MAAkBe,MAAM,CAACd,MAAP,EAAzB;AACD","sourcesContent":["import BigNumber from 'bignumber.js'\n\n// https://github.com/MikeMcl/bignumber.js\n// https://blog.csdn.net/shenxianhui1995/article/details/103985434\nexport class TokenAmount {\n  wei\n\n  decimals\n  _decimals\n\n  constructor(wei, decimals = 0, isWei = true) {\n    this.decimals = decimals\n    this._decimals = new BigNumber(10).exponentiatedBy(decimals)\n\n    if (isWei) {\n      this.wei = new BigNumber(wei)\n    } else {\n      this.wei = new BigNumber(wei).multipliedBy(this._decimals)\n    }\n  }\n\n  toEther() {\n    return this.wei.dividedBy(this._decimals)\n  }\n\n  toWei() {\n    return this.wei\n  }\n\n  format() {\n    const vaule = this.wei.dividedBy(this._decimals)\n    return vaule.toFormat(vaule.isInteger() ? 0 : this.decimals)\n  }\n\n  fixed() {\n    return this.wei.dividedBy(this._decimals).toFixed(this.decimals)\n  }\n\n  isNullOrZero() {\n    return this.wei.isNaN() || this.wei.isZero()\n  }\n  // + plus\n  // - minus\n  // × multipliedBy\n  // ÷ dividedBy\n}\n\n// >\nexport function gt(a, b) {\n  const valueA = new BigNumber(a)\n  const valueB = new BigNumber(b)\n\n  return valueA.isGreaterThan(valueB)\n}\n\n// >=\nexport function gte(a, b) {\n  const valueA = new BigNumber(a)\n  const valueB = new BigNumber(b)\n\n  return valueA.isGreaterThanOrEqualTo(valueB)\n}\n\n// <\nexport function lt(a, b) {\n  const valueA = new BigNumber(a)\n  const valueB = new BigNumber(b)\n\n  return valueA.isLessThan(valueB)\n}\n\n// <=\nexport function lte(a, b) {\n  const valueA = new BigNumber(a)\n  const valueB = new BigNumber(b)\n\n  return valueA.isLessThanOrEqualTo(valueB)\n}\n\nexport function isNullOrZero(value) {\n  const amount = new BigNumber(value)\n\n  return amount.isNaN() || amount.isZero()\n}\n"]},"metadata":{},"sourceType":"module"}