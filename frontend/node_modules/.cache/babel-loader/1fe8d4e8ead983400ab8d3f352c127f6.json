{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\nexport default class Wallet extends EventEmitter {\n  constructor(provider, _network) {\n    super();\n    this._network = _network;\n    this._publicKey = null;\n    this._popup = null;\n    this._handlerAdded = false;\n    this._nextRequestId = 1;\n    this._autoApprove = false;\n    this._responsePromises = new Map();\n\n    this.handleMessage = e => {\n      var _a;\n\n      if (this._injectedProvider && e.source === window || e.origin === ((_a = this._providerUrl) === null || _a === void 0 ? void 0 : _a.origin) && e.source === this._popup) {\n        if (e.data.method === 'connected') {\n          const newPublicKey = new PublicKey(e.data.params.publicKey);\n\n          if (!this._publicKey || !this._publicKey.equals(newPublicKey)) {\n            if (this._publicKey && !this._publicKey.equals(newPublicKey)) {\n              this.handleDisconnect();\n            }\n\n            this._publicKey = newPublicKey;\n            this._autoApprove = !!e.data.params.autoApprove;\n            this.emit('connect', this._publicKey);\n          }\n        } else if (e.data.method === 'disconnected') {\n          this.handleDisconnect();\n        } else if (e.data.result || e.data.error) {\n          const promises = this._responsePromises.get(e.data.id);\n\n          if (promises) {\n            const [resolve, reject] = promises;\n\n            if (e.data.result) {\n              resolve(e.data.result);\n            } else {\n              reject(new Error(e.data.error));\n            }\n          }\n        }\n      }\n    };\n\n    this._beforeUnload = () => {\n      void this.disconnect();\n    };\n\n    if (isInjectedProvider(provider)) {\n      this._injectedProvider = provider;\n    } else if (isString(provider)) {\n      this._providerUrl = new URL(provider);\n      this._providerUrl.hash = new URLSearchParams({\n        origin: window.location.origin,\n        network: this._network\n      }).toString();\n    } else {\n      throw new Error('provider parameter must be an injected provider or a URL string.');\n    }\n  }\n\n  handleConnect() {\n    var _a;\n\n    if (!this._handlerAdded) {\n      this._handlerAdded = true;\n      window.addEventListener('message', this.handleMessage);\n      window.addEventListener('beforeunload', this._beforeUnload);\n    }\n\n    if (this._injectedProvider) {\n      return new Promise(resolve => {\n        void this.sendRequest('connect', {});\n        resolve();\n      });\n    } else {\n      window.name = 'parent';\n      this._popup = window.open((_a = this._providerUrl) === null || _a === void 0 ? void 0 : _a.toString(), '_blank', 'location,resizable,width=460,height=675');\n      return new Promise(resolve => {\n        this.once('connect', resolve);\n      });\n    }\n  }\n\n  handleDisconnect() {\n    if (this._handlerAdded) {\n      this._handlerAdded = false;\n      window.removeEventListener('message', this.handleMessage);\n      window.removeEventListener('beforeunload', this._beforeUnload);\n    }\n\n    if (this._publicKey) {\n      this._publicKey = null;\n      this.emit('disconnect');\n    }\n\n    this._responsePromises.forEach((_ref, id) => {\n      let [, reject] = _ref;\n\n      this._responsePromises.delete(id);\n\n      reject(new Error('Wallet disconnected'));\n    });\n  }\n\n  sendRequest(method, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (method !== 'connect' && !this.connected) {\n        throw new Error('Wallet not connected');\n      }\n\n      const requestId = this._nextRequestId;\n      ++this._nextRequestId;\n      return new Promise((resolve, reject) => {\n        var _a, _b, _c, _d;\n\n        this._responsePromises.set(requestId, [resolve, reject]);\n\n        if (this._injectedProvider) {\n          this._injectedProvider.postMessage({\n            jsonrpc: '2.0',\n            id: requestId,\n            method,\n            params: Object.assign({\n              network: this._network\n            }, params)\n          });\n        } else {\n          (_a = this._popup) === null || _a === void 0 ? void 0 : _a.postMessage({\n            jsonrpc: '2.0',\n            id: requestId,\n            method,\n            params\n          }, (_c = (_b = this._providerUrl) === null || _b === void 0 ? void 0 : _b.origin) !== null && _c !== void 0 ? _c : '');\n\n          if (!this.autoApprove) {\n            (_d = this._popup) === null || _d === void 0 ? void 0 : _d.focus();\n          }\n        }\n      });\n    });\n  }\n\n  get publicKey() {\n    return this._publicKey;\n  }\n\n  get connected() {\n    return this._publicKey !== null;\n  }\n\n  get autoApprove() {\n    return this._autoApprove;\n  }\n\n  connect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._popup) {\n        this._popup.close();\n      }\n\n      yield this.handleConnect();\n    });\n  }\n\n  disconnect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._injectedProvider) {\n        yield this.sendRequest('disconnect', {});\n      }\n\n      if (this._popup) {\n        this._popup.close();\n      }\n\n      this.handleDisconnect();\n    });\n  }\n\n  sign(data, display) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!(data instanceof Uint8Array)) {\n        throw new Error('Data must be an instance of Uint8Array');\n      }\n\n      const response = yield this.sendRequest('sign', {\n        data,\n        display\n      });\n      const signature = bs58.decode(response.signature);\n      const publicKey = new PublicKey(response.publicKey);\n      return {\n        signature,\n        publicKey\n      };\n    });\n  }\n\n  signTransaction(transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const response = yield this.sendRequest('signTransaction', {\n        message: bs58.encode(transaction.serializeMessage())\n      });\n      const signature = bs58.decode(response.signature);\n      const publicKey = new PublicKey(response.publicKey);\n      transaction.addSignature(publicKey, signature);\n      return transaction;\n    });\n  }\n\n  signAllTransactions(transactions) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const response = yield this.sendRequest('signAllTransactions', {\n        messages: transactions.map(tx => bs58.encode(tx.serializeMessage()))\n      });\n      const signatures = response.signatures.map(s => bs58.decode(s));\n      const publicKey = new PublicKey(response.publicKey);\n      transactions = transactions.map((tx, idx) => {\n        tx.addSignature(publicKey, signatures[idx]);\n        return tx;\n      });\n      return transactions;\n    });\n  }\n\n  diffieHellman(publicKey) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!(publicKey instanceof Uint8Array)) {\n        throw new Error('Data must be an instance of Uint8Array');\n      }\n\n      const response = yield this.sendRequest('diffieHellman', {\n        publicKey\n      });\n      return response;\n    });\n  }\n\n}\n\nfunction isString(a) {\n  return typeof a === 'string';\n}\n\nfunction isInjectedProvider(a) {\n  return isObject(a) && 'postMessage' in a && typeof a.postMessage === 'function';\n}\n\nfunction isObject(a) {\n  return typeof a === 'object' && a !== null;\n}","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,YAAP,MAAyB,eAAzB;AACA,SAAS,SAAT,QAAuC,iBAAvC;AACA,OAAO,IAAP,MAAiB,MAAjB;AAIA,eAAc,MAAO,MAAP,SAAsB,YAAtB,CAAkC;AAa9C,EAAA,WAAA,CAAY,QAAZ,EAAuC,QAAvC,EAAuD;AACrD;AADqC,SAAA,QAAA,GAAA,QAAA;AAV/B,SAAA,UAAA,GAA+B,IAA/B;AACA,SAAA,MAAA,GAAwB,IAAxB;AACA,SAAA,aAAA,GAAgB,KAAhB;AACA,SAAA,cAAA,GAAiB,CAAjB;AACA,SAAA,YAAA,GAAe,KAAf;AACA,SAAA,iBAAA,GAGJ,IAAI,GAAJ,EAHI;;AAsBR,SAAA,aAAA,GACE,CADc,IAWN;;;AACR,UACG,KAAK,iBAAL,IAA0B,CAAC,CAAC,MAAF,KAAa,MAAxC,IACC,CAAC,CAAC,MAAF,MAAa,CAAA,EAAA,GAAA,KAAK,YAAL,MAAiB,IAAjB,IAAiB,EAAA,KAAA,KAAA,CAAjB,GAAiB,KAAA,CAAjB,GAAiB,EAAA,CAAE,MAAhC,KAA0C,CAAC,CAAC,MAAF,KAAa,KAAK,MAF/D,EAGE;AACA,YAAI,CAAC,CAAC,IAAF,CAAO,MAAP,KAAkB,WAAtB,EAAmC;AACjC,gBAAM,YAAY,GAAG,IAAI,SAAJ,CAAc,CAAC,CAAC,IAAF,CAAO,MAAP,CAAc,SAA5B,CAArB;;AACA,cAAI,CAAC,KAAK,UAAN,IAAoB,CAAC,KAAK,UAAL,CAAgB,MAAhB,CAAuB,YAAvB,CAAzB,EAA+D;AAC7D,gBAAI,KAAK,UAAL,IAAmB,CAAC,KAAK,UAAL,CAAgB,MAAhB,CAAuB,YAAvB,CAAxB,EAA8D;AAC5D,mBAAK,gBAAL;AACD;;AACD,iBAAK,UAAL,GAAkB,YAAlB;AACA,iBAAK,YAAL,GAAoB,CAAC,CAAC,CAAC,CAAC,IAAF,CAAO,MAAP,CAAc,WAApC;AACA,iBAAK,IAAL,CAAU,SAAV,EAAqB,KAAK,UAA1B;AACD;AACF,SAVD,MAUO,IAAI,CAAC,CAAC,IAAF,CAAO,MAAP,KAAkB,cAAtB,EAAsC;AAC3C,eAAK,gBAAL;AACD,SAFM,MAEA,IAAI,CAAC,CAAC,IAAF,CAAO,MAAP,IAAiB,CAAC,CAAC,IAAF,CAAO,KAA5B,EAAmC;AACxC,gBAAM,QAAQ,GAAG,KAAK,iBAAL,CAAuB,GAAvB,CAA2B,CAAC,CAAC,IAAF,CAAO,EAAlC,CAAjB;;AACA,cAAI,QAAJ,EAAc;AACZ,kBAAM,CAAC,OAAD,EAAU,MAAV,IAAoB,QAA1B;;AACA,gBAAI,CAAC,CAAC,IAAF,CAAO,MAAX,EAAmB;AACjB,cAAA,OAAO,CAAC,CAAC,CAAC,IAAF,CAAO,MAAR,CAAP;AACD,aAFD,MAEO;AACL,cAAA,MAAM,CAAC,IAAI,KAAJ,CAAU,CAAC,CAAC,IAAF,CAAO,KAAjB,CAAD,CAAN;AACD;AACF;AACF;AACF;AACF,KAxCD;;AAmJQ,SAAA,aAAA,GAAgB,MAAW;AACjC,WAAK,KAAK,UAAL,EAAL;AACD,KAFO;;AAlKN,QAAI,kBAAkB,CAAC,QAAD,CAAtB,EAAkC;AAChC,WAAK,iBAAL,GAAyB,QAAzB;AACD,KAFD,MAEO,IAAI,QAAQ,CAAC,QAAD,CAAZ,EAAwB;AAC7B,WAAK,YAAL,GAAoB,IAAI,GAAJ,CAAQ,QAAR,CAApB;AACA,WAAK,YAAL,CAAkB,IAAlB,GAAyB,IAAI,eAAJ,CAAoB;AAC3C,QAAA,MAAM,EAAE,MAAM,CAAC,QAAP,CAAgB,MADmB;AAE3C,QAAA,OAAO,EAAE,KAAK;AAF6B,OAApB,EAGtB,QAHsB,EAAzB;AAID,KANM,MAMA;AACL,YAAM,IAAI,KAAJ,CACJ,kEADI,CAAN;AAGD;AACF;;AA4CO,EAAA,aAAa,GAAA;;;AACnB,QAAI,CAAC,KAAK,aAAV,EAAyB;AACvB,WAAK,aAAL,GAAqB,IAArB;AACA,MAAA,MAAM,CAAC,gBAAP,CAAwB,SAAxB,EAAmC,KAAK,aAAxC;AACA,MAAA,MAAM,CAAC,gBAAP,CAAwB,cAAxB,EAAwC,KAAK,aAA7C;AACD;;AACD,QAAI,KAAK,iBAAT,EAA4B;AAC1B,aAAO,IAAI,OAAJ,CAAmB,OAAD,IAAY;AACnC,aAAK,KAAK,WAAL,CAAiB,SAAjB,EAA4B,EAA5B,CAAL;AACA,QAAA,OAAO;AACR,OAHM,CAAP;AAID,KALD,MAKO;AACL,MAAA,MAAM,CAAC,IAAP,GAAc,QAAd;AACA,WAAK,MAAL,GAAc,MAAM,CAAC,IAAP,CACZ,CAAA,EAAA,GAAA,KAAK,YAAL,MAAiB,IAAjB,IAAiB,EAAA,KAAA,KAAA,CAAjB,GAAiB,KAAA,CAAjB,GAAiB,EAAA,CAAE,QAAF,EADL,EAEZ,QAFY,EAGZ,yCAHY,CAAd;AAKA,aAAO,IAAI,OAAJ,CAAa,OAAD,IAAY;AAC7B,aAAK,IAAL,CAAU,SAAV,EAAqB,OAArB;AACD,OAFM,CAAP;AAGD;AACF;;AAEO,EAAA,gBAAgB,GAAA;AACtB,QAAI,KAAK,aAAT,EAAwB;AACtB,WAAK,aAAL,GAAqB,KAArB;AACA,MAAA,MAAM,CAAC,mBAAP,CAA2B,SAA3B,EAAsC,KAAK,aAA3C;AACA,MAAA,MAAM,CAAC,mBAAP,CAA2B,cAA3B,EAA2C,KAAK,aAAhD;AACD;;AACD,QAAI,KAAK,UAAT,EAAqB;AACnB,WAAK,UAAL,GAAkB,IAAlB;AACA,WAAK,IAAL,CAAU,YAAV;AACD;;AACD,SAAK,iBAAL,CAAuB,OAAvB,CAA+B,OAAa,EAAb,KAAmB;AAAA,UAAlB,GAAG,MAAH,CAAkB;;AAChD,WAAK,iBAAL,CAAuB,MAAvB,CAA8B,EAA9B;;AACA,MAAA,MAAM,CAAC,IAAI,KAAJ,CAAU,qBAAV,CAAD,CAAN;AACD,KAHD;AAID;;AAEa,EAAA,WAAW,CAAC,MAAD,EAAiB,MAAjB,EAAgD;;AACvE,UAAI,MAAM,KAAK,SAAX,IAAwB,CAAC,KAAK,SAAlC,EAA6C;AAC3C,cAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AACD;;AACD,YAAM,SAAS,GAAG,KAAK,cAAvB;AACA,QAAE,KAAK,cAAP;AACA,aAAO,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,KAAoB;;;AACrC,aAAK,iBAAL,CAAuB,GAAvB,CAA2B,SAA3B,EAAsC,CAAC,OAAD,EAAU,MAAV,CAAtC;;AACA,YAAI,KAAK,iBAAT,EAA4B;AAC1B,eAAK,iBAAL,CAAuB,WAAvB,CAAmC;AACjC,YAAA,OAAO,EAAE,KADwB;AAEjC,YAAA,EAAE,EAAE,SAF6B;AAGjC,YAAA,MAHiC;AAIjC,YAAA,MAAM,EAAA,MAAA,CAAA,MAAA,CAAA;AACJ,cAAA,OAAO,EAAE,KAAK;AADV,aAAA,EAED,MAFC;AAJ2B,WAAnC;AASD,SAVD,MAUO;AACL,WAAA,EAAA,GAAA,KAAK,MAAL,MAAW,IAAX,IAAW,EAAA,KAAA,KAAA,CAAX,GAAW,KAAA,CAAX,GAAW,EAAA,CAAE,WAAF,CACT;AACE,YAAA,OAAO,EAAE,KADX;AAEE,YAAA,EAAE,EAAE,SAFN;AAGE,YAAA,MAHF;AAIE,YAAA;AAJF,WADS,EAOT,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,KAAK,YAAL,MAAiB,IAAjB,IAAiB,EAAA,KAAA,KAAA,CAAjB,GAAiB,KAAA,CAAjB,GAAiB,EAAA,CAAE,MAAnB,MAAyB,IAAzB,IAAyB,EAAA,KAAA,KAAA,CAAzB,GAAyB,EAAzB,GAA6B,EAPpB,CAAX;;AAUA,cAAI,CAAC,KAAK,WAAV,EAAuB;AACrB,aAAA,EAAA,GAAA,KAAK,MAAL,MAAW,IAAX,IAAW,EAAA,KAAA,KAAA,CAAX,GAAW,KAAA,CAAX,GAAW,EAAA,CAAE,KAAF,EAAX;AACD;AACF;AACF,OA3BM,CAAP;AA4BD,K;AAAA;;AAEY,MAAT,SAAS,GAAA;AACX,WAAO,KAAK,UAAZ;AACD;;AAEY,MAAT,SAAS,GAAA;AACX,WAAO,KAAK,UAAL,KAAoB,IAA3B;AACD;;AAEc,MAAX,WAAW,GAAA;AACb,WAAO,KAAK,YAAZ;AACD;;AAEK,EAAA,OAAO,GAAA;;AACX,UAAI,KAAK,MAAT,EAAiB;AACf,aAAK,MAAL,CAAY,KAAZ;AACD;;AACD,YAAM,KAAK,aAAL,EAAN;AACD,K;AAAA;;AAEK,EAAA,UAAU,GAAA;;AACd,UAAI,KAAK,iBAAT,EAA4B;AAC1B,cAAM,KAAK,WAAL,CAAiB,YAAjB,EAA+B,EAA/B,CAAN;AACD;;AACD,UAAI,KAAK,MAAT,EAAiB;AACf,aAAK,MAAL,CAAY,KAAZ;AACD;;AACD,WAAK,gBAAL;AACD,K;AAAA;;AAMK,EAAA,IAAI,CACR,IADQ,EAER,OAFQ,EAEQ;;AAKhB,UAAI,EAAE,IAAI,YAAY,UAAlB,CAAJ,EAAmC;AACjC,cAAM,IAAI,KAAJ,CAAU,wCAAV,CAAN;AACD;;AAED,YAAM,QAAQ,GAAI,MAAM,KAAK,WAAL,CAAiB,MAAjB,EAAyB;AAC/C,QAAA,IAD+C;AAE/C,QAAA;AAF+C,OAAzB,CAAxB;AAIA,YAAM,SAAS,GAAG,IAAI,CAAC,MAAL,CAAY,QAAQ,CAAC,SAArB,CAAlB;AACA,YAAM,SAAS,GAAG,IAAI,SAAJ,CAAc,QAAQ,CAAC,SAAvB,CAAlB;AACA,aAAO;AACL,QAAA,SADK;AAEL,QAAA;AAFK,OAAP;AAID,K;AAAA;;AAEK,EAAA,eAAe,CAAC,WAAD,EAAyB;;AAC5C,YAAM,QAAQ,GAAI,MAAM,KAAK,WAAL,CAAiB,iBAAjB,EAAoC;AAC1D,QAAA,OAAO,EAAE,IAAI,CAAC,MAAL,CAAY,WAAW,CAAC,gBAAZ,EAAZ;AADiD,OAApC,CAAxB;AAGA,YAAM,SAAS,GAAG,IAAI,CAAC,MAAL,CAAY,QAAQ,CAAC,SAArB,CAAlB;AACA,YAAM,SAAS,GAAG,IAAI,SAAJ,CAAc,QAAQ,CAAC,SAAvB,CAAlB;AACA,MAAA,WAAW,CAAC,YAAZ,CAAyB,SAAzB,EAAoC,SAApC;AACA,aAAO,WAAP;AACD,K;AAAA;;AAEK,EAAA,mBAAmB,CACvB,YADuB,EACI;;AAE3B,YAAM,QAAQ,GAAI,MAAM,KAAK,WAAL,CAAiB,qBAAjB,EAAwC;AAC9D,QAAA,QAAQ,EAAE,YAAY,CAAC,GAAb,CAAkB,EAAD,IAAQ,IAAI,CAAC,MAAL,CAAY,EAAE,CAAC,gBAAH,EAAZ,CAAzB;AADoD,OAAxC,CAAxB;AAGA,YAAM,UAAU,GAAG,QAAQ,CAAC,UAAT,CAAoB,GAApB,CAAyB,CAAD,IAAO,IAAI,CAAC,MAAL,CAAY,CAAZ,CAA/B,CAAnB;AACA,YAAM,SAAS,GAAG,IAAI,SAAJ,CAAc,QAAQ,CAAC,SAAvB,CAAlB;AACA,MAAA,YAAY,GAAG,YAAY,CAAC,GAAb,CAAiB,CAAC,EAAD,EAAK,GAAL,KAAY;AAC1C,QAAA,EAAE,CAAC,YAAH,CAAgB,SAAhB,EAA2B,UAAU,CAAC,GAAD,CAArC;AACA,eAAO,EAAP;AACD,OAHc,CAAf;AAIA,aAAO,YAAP;AACD,K;AAAA;;AAEK,EAAA,aAAa,CACjB,SADiB,EACI;;AAErB,UAAI,EAAE,SAAS,YAAY,UAAvB,CAAJ,EAAwC;AACtC,cAAM,IAAI,KAAJ,CAAU,wCAAV,CAAN;AACD;;AACD,YAAM,QAAQ,GAAI,MAAM,KAAK,WAAL,CAAiB,eAAjB,EAAkC;AACxD,QAAA;AADwD,OAAlC,CAAxB;AAMA,aAAO,QAAP;AACD,K;AAAA;;AAlP6C;;AAqPhD,SAAS,QAAT,CAAkB,CAAlB,EAA4B;AAC1B,SAAO,OAAO,CAAP,KAAa,QAApB;AACD;;AAED,SAAS,kBAAT,CAA4B,CAA5B,EAAsC;AACpC,SACE,QAAQ,CAAC,CAAD,CAAR,IAAe,iBAAiB,CAAhC,IAAqC,OAAO,CAAC,CAAC,WAAT,KAAyB,UADhE;AAGD;;AAED,SAAS,QAAT,CAAkB,CAAlB,EAA4B;AAC1B,SAAO,OAAO,CAAP,KAAa,QAAb,IAAyB,CAAC,KAAK,IAAtC;AACD","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\nexport default class Wallet extends EventEmitter {\n    constructor(provider, _network) {\n        super();\n        this._network = _network;\n        this._publicKey = null;\n        this._popup = null;\n        this._handlerAdded = false;\n        this._nextRequestId = 1;\n        this._autoApprove = false;\n        this._responsePromises = new Map();\n        this.handleMessage = (e) => {\n            var _a;\n            if ((this._injectedProvider && e.source === window) ||\n                (e.origin === ((_a = this._providerUrl) === null || _a === void 0 ? void 0 : _a.origin) && e.source === this._popup)) {\n                if (e.data.method === 'connected') {\n                    const newPublicKey = new PublicKey(e.data.params.publicKey);\n                    if (!this._publicKey || !this._publicKey.equals(newPublicKey)) {\n                        if (this._publicKey && !this._publicKey.equals(newPublicKey)) {\n                            this.handleDisconnect();\n                        }\n                        this._publicKey = newPublicKey;\n                        this._autoApprove = !!e.data.params.autoApprove;\n                        this.emit('connect', this._publicKey);\n                    }\n                }\n                else if (e.data.method === 'disconnected') {\n                    this.handleDisconnect();\n                }\n                else if (e.data.result || e.data.error) {\n                    const promises = this._responsePromises.get(e.data.id);\n                    if (promises) {\n                        const [resolve, reject] = promises;\n                        if (e.data.result) {\n                            resolve(e.data.result);\n                        }\n                        else {\n                            reject(new Error(e.data.error));\n                        }\n                    }\n                }\n            }\n        };\n        this._beforeUnload = () => {\n            void this.disconnect();\n        };\n        if (isInjectedProvider(provider)) {\n            this._injectedProvider = provider;\n        }\n        else if (isString(provider)) {\n            this._providerUrl = new URL(provider);\n            this._providerUrl.hash = new URLSearchParams({\n                origin: window.location.origin,\n                network: this._network,\n            }).toString();\n        }\n        else {\n            throw new Error('provider parameter must be an injected provider or a URL string.');\n        }\n    }\n    handleConnect() {\n        var _a;\n        if (!this._handlerAdded) {\n            this._handlerAdded = true;\n            window.addEventListener('message', this.handleMessage);\n            window.addEventListener('beforeunload', this._beforeUnload);\n        }\n        if (this._injectedProvider) {\n            return new Promise((resolve) => {\n                void this.sendRequest('connect', {});\n                resolve();\n            });\n        }\n        else {\n            window.name = 'parent';\n            this._popup = window.open((_a = this._providerUrl) === null || _a === void 0 ? void 0 : _a.toString(), '_blank', 'location,resizable,width=460,height=675');\n            return new Promise((resolve) => {\n                this.once('connect', resolve);\n            });\n        }\n    }\n    handleDisconnect() {\n        if (this._handlerAdded) {\n            this._handlerAdded = false;\n            window.removeEventListener('message', this.handleMessage);\n            window.removeEventListener('beforeunload', this._beforeUnload);\n        }\n        if (this._publicKey) {\n            this._publicKey = null;\n            this.emit('disconnect');\n        }\n        this._responsePromises.forEach(([, reject], id) => {\n            this._responsePromises.delete(id);\n            reject(new Error('Wallet disconnected'));\n        });\n    }\n    sendRequest(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (method !== 'connect' && !this.connected) {\n                throw new Error('Wallet not connected');\n            }\n            const requestId = this._nextRequestId;\n            ++this._nextRequestId;\n            return new Promise((resolve, reject) => {\n                var _a, _b, _c, _d;\n                this._responsePromises.set(requestId, [resolve, reject]);\n                if (this._injectedProvider) {\n                    this._injectedProvider.postMessage({\n                        jsonrpc: '2.0',\n                        id: requestId,\n                        method,\n                        params: Object.assign({ network: this._network }, params),\n                    });\n                }\n                else {\n                    (_a = this._popup) === null || _a === void 0 ? void 0 : _a.postMessage({\n                        jsonrpc: '2.0',\n                        id: requestId,\n                        method,\n                        params,\n                    }, (_c = (_b = this._providerUrl) === null || _b === void 0 ? void 0 : _b.origin) !== null && _c !== void 0 ? _c : '');\n                    if (!this.autoApprove) {\n                        (_d = this._popup) === null || _d === void 0 ? void 0 : _d.focus();\n                    }\n                }\n            });\n        });\n    }\n    get publicKey() {\n        return this._publicKey;\n    }\n    get connected() {\n        return this._publicKey !== null;\n    }\n    get autoApprove() {\n        return this._autoApprove;\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._popup) {\n                this._popup.close();\n            }\n            yield this.handleConnect();\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._injectedProvider) {\n                yield this.sendRequest('disconnect', {});\n            }\n            if (this._popup) {\n                this._popup.close();\n            }\n            this.handleDisconnect();\n        });\n    }\n    sign(data, display) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!(data instanceof Uint8Array)) {\n                throw new Error('Data must be an instance of Uint8Array');\n            }\n            const response = (yield this.sendRequest('sign', {\n                data,\n                display,\n            }));\n            const signature = bs58.decode(response.signature);\n            const publicKey = new PublicKey(response.publicKey);\n            return {\n                signature,\n                publicKey,\n            };\n        });\n    }\n    signTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = (yield this.sendRequest('signTransaction', {\n                message: bs58.encode(transaction.serializeMessage()),\n            }));\n            const signature = bs58.decode(response.signature);\n            const publicKey = new PublicKey(response.publicKey);\n            transaction.addSignature(publicKey, signature);\n            return transaction;\n        });\n    }\n    signAllTransactions(transactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = (yield this.sendRequest('signAllTransactions', {\n                messages: transactions.map((tx) => bs58.encode(tx.serializeMessage())),\n            }));\n            const signatures = response.signatures.map((s) => bs58.decode(s));\n            const publicKey = new PublicKey(response.publicKey);\n            transactions = transactions.map((tx, idx) => {\n                tx.addSignature(publicKey, signatures[idx]);\n                return tx;\n            });\n            return transactions;\n        });\n    }\n    diffieHellman(publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!(publicKey instanceof Uint8Array)) {\n                throw new Error('Data must be an instance of Uint8Array');\n            }\n            const response = (yield this.sendRequest('diffieHellman', {\n                publicKey,\n            }));\n            return response;\n        });\n    }\n}\nfunction isString(a) {\n    return typeof a === 'string';\n}\nfunction isInjectedProvider(a) {\n    return (isObject(a) && 'postMessage' in a && typeof a.postMessage === 'function');\n}\nfunction isObject(a) {\n    return typeof a === 'object' && a !== null;\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}