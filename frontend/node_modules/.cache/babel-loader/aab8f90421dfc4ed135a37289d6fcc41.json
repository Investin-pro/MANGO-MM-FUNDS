{"ast":null,"code":"/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\"\n    }\n  },\n  az: {\n    regexp: /\\u0130/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\"\n    }\n  },\n  lt: {\n    regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n    map: {\n      I: \"\\u0069\\u0307\",\n      J: \"\\u006A\\u0307\",\n      Į: \"\\u012F\\u0307\",\n      Ì: \"\\u0069\\u0307\\u0300\",\n      Í: \"\\u0069\\u0307\\u0301\",\n      Ĩ: \"\\u0069\\u0307\\u0303\"\n    }\n  }\n};\n/**\n * Localized lower case.\n */\n\nexport function localeLowerCase(str, locale) {\n  var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return lowerCase(str.replace(lang.regexp, function (m) {\n    return lang.map[m];\n  }));\n  return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */\n\nexport function lowerCase(str) {\n  return str.toLowerCase();\n}","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"AAQA;;AAEG;AACH,IAAM,gBAAgB,GAA2B;AAC/C,EAAA,EAAE,EAAE;AACF,IAAA,MAAM,EAAE,6BADN;AAEF,IAAA,GAAG,EAAE;AACH,MAAA,CAAC,EAAE,QADA;AAEH,MAAA,CAAC,EAAE,QAFA;AAGH,MAAA,EAAE,EAAE;AAHD;AAFH,GAD2C;AAS/C,EAAA,EAAE,EAAE;AACF,IAAA,MAAM,EAAE,SADN;AAEF,IAAA,GAAG,EAAE;AACH,MAAA,CAAC,EAAE,QADA;AAEH,MAAA,CAAC,EAAE,QAFA;AAGH,MAAA,EAAE,EAAE;AAHD;AAFH,GAT2C;AAiB/C,EAAA,EAAE,EAAE;AACF,IAAA,MAAM,EAAE,4CADN;AAEF,IAAA,GAAG,EAAE;AACH,MAAA,CAAC,EAAE,cADA;AAEH,MAAA,CAAC,EAAE,cAFA;AAGH,MAAA,CAAC,EAAE,cAHA;AAIH,MAAA,CAAC,EAAE,oBAJA;AAKH,MAAA,CAAC,EAAE,oBALA;AAMH,MAAA,CAAC,EAAE;AANA;AAFH;AAjB2C,CAAjD;AA8BA;;AAEG;;AACH,OAAM,SAAU,eAAV,CAA0B,GAA1B,EAAuC,MAAvC,EAAqD;AACzD,MAAM,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,WAAP,EAAD,CAA7B;AACA,MAAI,IAAJ,EAAU,OAAO,SAAS,CAAC,GAAG,CAAC,OAAJ,CAAY,IAAI,CAAC,MAAjB,EAAyB,UAAC,CAAD,EAAE;AAAK,WAAA,IAAI,CAAC,GAAL,CAAA,CAAA,CAAA;AAAW,GAA3C,CAAD,CAAhB;AACV,SAAO,SAAS,CAAC,GAAD,CAAhB;AACD;AAED;;AAEG;;AACH,OAAM,SAAU,SAAV,CAAoB,GAApB,EAA+B;AACnC,SAAO,GAAG,CAAC,WAAJ,EAAP;AACD","sourcesContent":["/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  az: {\n    regexp: /\\u0130/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  lt: {\n    regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n    map: {\n      I: \"\\u0069\\u0307\",\n      J: \"\\u006A\\u0307\",\n      Į: \"\\u012F\\u0307\",\n      Ì: \"\\u0069\\u0307\\u0300\",\n      Í: \"\\u0069\\u0307\\u0301\",\n      Ĩ: \"\\u0069\\u0307\\u0303\",\n    },\n  },\n};\n\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return lowerCase(str.replace(lang.regexp, (m) => lang.map[m]));\n  return lowerCase(str);\n}\n\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str: string) {\n  return str.toLowerCase();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}