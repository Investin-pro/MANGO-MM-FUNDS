{"ast":null,"code":"/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n\n    method.create = function () {\n      return new Sha256(is224);\n    };\n\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n\n      if (Array.isArray(message) || ArrayBuffer.isView(message) || message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else {\n      // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n\n    var notString,\n        type = typeof message;\n\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n\n      notString = true;\n    }\n\n    var code,\n        index = 0,\n        i,\n        length = message.length,\n        blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n            blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n\n    this.finalized = true;\n    var blocks = this.blocks,\n        i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0,\n        b = this.h1,\n        c = this.h2,\n        d = this.h3,\n        e = this.h4,\n        f = this.h5,\n        g = this.h6,\n        h = this.h7,\n        blocks = this.blocks,\n        j,\n        s0,\n        s1,\n        maj,\n        t1,\n        t2,\n        ch,\n        ab,\n        da,\n        cd,\n        bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = (t1 >>> 7 | t1 << 25) ^ (t1 >>> 18 | t1 << 14) ^ t1 >>> 3;\n      t1 = blocks[j - 2];\n      s1 = (t1 >>> 17 | t1 << 15) ^ (t1 >>> 19 | t1 << 13) ^ t1 >>> 10;\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n\n        this.first = false;\n      } else {\n        s0 = (a >>> 2 | a << 30) ^ (a >>> 13 | a << 19) ^ (a >>> 22 | a << 10);\n        s1 = (e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7);\n        ab = a & b;\n        maj = ab ^ a & c ^ bc;\n        ch = e & f ^ ~e & g;\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n\n      s0 = (d >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10);\n      s1 = (h >>> 6 | h << 26) ^ (h >>> 11 | h << 21) ^ (h >>> 25 | h << 7);\n      da = d & a;\n      maj = da ^ d & b ^ ab;\n      ch = h & e ^ ~h & f;\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = (c >>> 2 | c << 30) ^ (c >>> 13 | c << 19) ^ (c >>> 22 | c << 10);\n      s1 = (g >>> 6 | g << 26) ^ (g >>> 11 | g << 21) ^ (g >>> 25 | g << 7);\n      cd = c & d;\n      maj = cd ^ c & a ^ da;\n      ch = g & h ^ ~g & e;\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = (b >>> 2 | b << 30) ^ (b >>> 13 | b << 19) ^ (b >>> 22 | b << 10);\n      s1 = (f >>> 6 | f << 26) ^ (f >>> 11 | f << 21) ^ (f >>> 25 | f << 7);\n      bc = b & c;\n      maj = bc ^ b & d ^ cd;\n      ch = f & g ^ ~f & h;\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n    var h0 = this.h0,\n        h1 = this.h1,\n        h2 = this.h2,\n        h3 = this.h3,\n        h4 = this.h4,\n        h5 = this.h5,\n        h6 = this.h6,\n        h7 = this.h7;\n    var hex = HEX_CHARS[h0 >> 28 & 0x0F] + HEX_CHARS[h0 >> 24 & 0x0F] + HEX_CHARS[h0 >> 20 & 0x0F] + HEX_CHARS[h0 >> 16 & 0x0F] + HEX_CHARS[h0 >> 12 & 0x0F] + HEX_CHARS[h0 >> 8 & 0x0F] + HEX_CHARS[h0 >> 4 & 0x0F] + HEX_CHARS[h0 & 0x0F] + HEX_CHARS[h1 >> 28 & 0x0F] + HEX_CHARS[h1 >> 24 & 0x0F] + HEX_CHARS[h1 >> 20 & 0x0F] + HEX_CHARS[h1 >> 16 & 0x0F] + HEX_CHARS[h1 >> 12 & 0x0F] + HEX_CHARS[h1 >> 8 & 0x0F] + HEX_CHARS[h1 >> 4 & 0x0F] + HEX_CHARS[h1 & 0x0F] + HEX_CHARS[h2 >> 28 & 0x0F] + HEX_CHARS[h2 >> 24 & 0x0F] + HEX_CHARS[h2 >> 20 & 0x0F] + HEX_CHARS[h2 >> 16 & 0x0F] + HEX_CHARS[h2 >> 12 & 0x0F] + HEX_CHARS[h2 >> 8 & 0x0F] + HEX_CHARS[h2 >> 4 & 0x0F] + HEX_CHARS[h2 & 0x0F] + HEX_CHARS[h3 >> 28 & 0x0F] + HEX_CHARS[h3 >> 24 & 0x0F] + HEX_CHARS[h3 >> 20 & 0x0F] + HEX_CHARS[h3 >> 16 & 0x0F] + HEX_CHARS[h3 >> 12 & 0x0F] + HEX_CHARS[h3 >> 8 & 0x0F] + HEX_CHARS[h3 >> 4 & 0x0F] + HEX_CHARS[h3 & 0x0F] + HEX_CHARS[h4 >> 28 & 0x0F] + HEX_CHARS[h4 >> 24 & 0x0F] + HEX_CHARS[h4 >> 20 & 0x0F] + HEX_CHARS[h4 >> 16 & 0x0F] + HEX_CHARS[h4 >> 12 & 0x0F] + HEX_CHARS[h4 >> 8 & 0x0F] + HEX_CHARS[h4 >> 4 & 0x0F] + HEX_CHARS[h4 & 0x0F] + HEX_CHARS[h5 >> 28 & 0x0F] + HEX_CHARS[h5 >> 24 & 0x0F] + HEX_CHARS[h5 >> 20 & 0x0F] + HEX_CHARS[h5 >> 16 & 0x0F] + HEX_CHARS[h5 >> 12 & 0x0F] + HEX_CHARS[h5 >> 8 & 0x0F] + HEX_CHARS[h5 >> 4 & 0x0F] + HEX_CHARS[h5 & 0x0F] + HEX_CHARS[h6 >> 28 & 0x0F] + HEX_CHARS[h6 >> 24 & 0x0F] + HEX_CHARS[h6 >> 20 & 0x0F] + HEX_CHARS[h6 >> 16 & 0x0F] + HEX_CHARS[h6 >> 12 & 0x0F] + HEX_CHARS[h6 >> 8 & 0x0F] + HEX_CHARS[h6 >> 4 & 0x0F] + HEX_CHARS[h6 & 0x0F];\n\n    if (!this.is224) {\n      hex += HEX_CHARS[h7 >> 28 & 0x0F] + HEX_CHARS[h7 >> 24 & 0x0F] + HEX_CHARS[h7 >> 20 & 0x0F] + HEX_CHARS[h7 >> 16 & 0x0F] + HEX_CHARS[h7 >> 12 & 0x0F] + HEX_CHARS[h7 >> 8 & 0x0F] + HEX_CHARS[h7 >> 4 & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n    var h0 = this.h0,\n        h1 = this.h1,\n        h2 = this.h2,\n        h3 = this.h3,\n        h4 = this.h4,\n        h5 = this.h5,\n        h6 = this.h6,\n        h7 = this.h7;\n    var arr = [h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF];\n\n    if (!this.is224) {\n      arr.push(h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF);\n    }\n\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i,\n        type = typeof key;\n\n    if (type === 'string') {\n      var bytes = [],\n          length = key.length,\n          index = 0,\n          code;\n\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = 0xc0 | code >> 6;\n          bytes[index++] = 0x80 | code & 0x3f;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = 0xe0 | code >> 12;\n          bytes[index++] = 0x80 | code >> 6 & 0x3f;\n          bytes[index++] = 0x80 | code & 0x3f;\n        } else {\n          code = 0x10000 + ((code & 0x3ff) << 10 | key.charCodeAt(++i) & 0x3ff);\n          bytes[index++] = 0xf0 | code >> 18;\n          bytes[index++] = 0x80 | code >> 12 & 0x3f;\n          bytes[index++] = 0x80 | code >> 6 & 0x3f;\n          bytes[index++] = 0x80 | code & 0x3f;\n        }\n      }\n\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = new Sha256(is224, true).update(key).array();\n    }\n\n    var oKeyPad = [],\n        iKeyPad = [];\n\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/zohebshahzan/code/Solana-2/frontend/node_modules/js-sha256/src/sha256.js"],"names":["ERROR","WINDOW","window","root","JS_SHA256_NO_WINDOW","WEB_WORKER","self","NODE_JS","JS_SHA256_NO_NODE_JS","process","versions","node","global","COMMON_JS","JS_SHA256_NO_COMMON_JS","module","exports","AMD","define","amd","ARRAY_BUFFER","JS_SHA256_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","split","EXTRA","SHIFT","K","OUTPUT_TYPES","blocks","Array","isArray","obj","Object","prototype","toString","call","JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW","isView","buffer","constructor","createOutputMethod","outputType","is224","message","Sha256","update","createMethod","method","nodeWrap","create","i","length","type","crypto","eval","Buffer","algorithm","nodeMethod","createHash","digest","undefined","Error","Uint8Array","createHmacOutputMethod","key","HmacSha256","createHmacMethod","sharedMemory","h0","h1","h2","h3","h4","h5","h6","h7","block","start","bytes","hBytes","finalized","hashed","first","notString","code","index","charCodeAt","lastByteIndex","hash","finalize","a","b","c","d","e","f","g","h","j","s0","s1","maj","t1","t2","ch","ab","da","cd","bc","hex","arr","push","array","arrayBuffer","dataView","DataView","setUint32","oKeyPad","iKeyPad","inner","innerHash","sha256","sha224","hmac"],"mappings":"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","sourcesContent":["/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\n      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\n      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\n      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\n      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\n      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\n      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\n        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\n        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\n        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n"]},"metadata":{},"sourceType":"script"}