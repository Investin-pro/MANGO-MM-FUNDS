{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Logger = exports.ReferralFees = exports.OpenOrdersPda = void 0;\n\nconst anchor_1 = require(\"@project-serum/anchor\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nclass OpenOrdersPda {\n  constructor(_ref) {\n    let {\n      proxyProgramId,\n      dexProgramId\n    } = _ref;\n    this._proxyProgramId = proxyProgramId;\n    this._dexProgramId = dexProgramId;\n  } // PDA authorized to create open orders accounts.\n\n\n  static async marketAuthority(market, dexProgramId, proxyProgramId) {\n    // b\"open-orders-init\"\n    const openOrdersStr = Buffer.from([111, 112, 101, 110, 45, 111, 114, 100, 101, 114, 115, 45, 105, 110, 105, 116]);\n    const [addr] = await web3_js_1.PublicKey.findProgramAddress([openOrdersStr, dexProgramId.toBuffer(), market.toBuffer()], proxyProgramId);\n    return addr;\n  }\n\n  static async openOrdersAddress(market, owner, dexProgramId, proxyProgramId) {\n    // b\"open-orders\".\n    const openOrdersStr = Buffer.from([111, 112, 101, 110, 45, 111, 114, 100, 101, 114, 115]);\n    const [addr] = await web3_js_1.PublicKey.findProgramAddress([openOrdersStr, dexProgramId.toBuffer(), market.toBuffer(), owner.toBuffer()], proxyProgramId);\n    return addr;\n  }\n\n  initOpenOrders(ix) {\n    const market = ix.keys[2].pubkey;\n    const owner = ix.keys[1].pubkey; // b\"open-orders\"\n\n    const openOrdersSeed = Buffer.from([111, 112, 101, 110, 45, 111, 114, 100, 101, 114, 115]); // b\"open-orders-init\"\n\n    const openOrdersInitSeed = Buffer.from([111, 112, 101, 110, 45, 111, 114, 100, 101, 114, 115, 45, 105, 110, 105, 116]);\n    const [openOrders, bump] = anchor_1.utils.publicKey.findProgramAddressSync([openOrdersSeed, this._dexProgramId.toBuffer(), market.toBuffer(), owner.toBuffer()], this._proxyProgramId);\n    const [marketAuthority, bumpInit] = anchor_1.utils.publicKey.findProgramAddressSync([openOrdersInitSeed, this._dexProgramId.toBuffer(), market.toBuffer()], this._proxyProgramId); // Override the open orders account and market authority.\n\n    ix.keys[0].pubkey = openOrders;\n    ix.keys[4].pubkey = marketAuthority; // Writable because it must pay for the PDA initialization.\n\n    ix.keys[1].isWritable = true; // Prepend to the account list extra accounts needed for PDA initialization.\n\n    ix.keys = [{\n      pubkey: this._dexProgramId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: web3_js_1.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }, ...ix.keys]; // Prepend the ix discriminator, bump, and bumpInit to the instruction data,\n    // which saves the program compute by avoiding recalculating them in the\n    // program.\n\n    ix.data = Buffer.concat([Buffer.from([0, bump, bumpInit]), ix.data]);\n  }\n\n  newOrderV3(ix) {\n    ix.data = Buffer.concat([Buffer.from([1]), ix.data]);\n  }\n\n  cancelOrderV2(ix) {\n    ix.data = Buffer.concat([Buffer.from([2]), ix.data]);\n  }\n\n  cancelOrderByClientIdV2(ix) {\n    ix.data = Buffer.concat([Buffer.from([3]), ix.data]);\n  }\n\n  settleFunds(ix) {\n    ix.data = Buffer.concat([Buffer.from([4]), ix.data]);\n  }\n\n  closeOpenOrders(ix) {\n    ix.data = Buffer.concat([Buffer.from([5]), ix.data]);\n  }\n\n  prune(ix) {\n    ix.data = Buffer.concat([Buffer.from([6]), ix.data]);\n  }\n\n}\n\nexports.OpenOrdersPda = OpenOrdersPda;\n\nclass ReferralFees {\n  // eslint-disable-next-line\n  initOpenOrders(_ix) {} // eslint-disable-next-line\n\n\n  newOrderV3(_ix) {} // eslint-disable-next-line\n\n\n  cancelOrderV2(_ix) {} // eslint-disable-next-line\n\n\n  cancelOrderByClientIdV2(_ix) {} // eslint-disable-next-line\n\n\n  settleFunds(_ix) {} // eslint-disable-next-line\n\n\n  closeOpenOrders(_ix) {} // eslint-disable-next-line\n\n\n  prune(_ix) {}\n\n}\n\nexports.ReferralFees = ReferralFees;\n\nclass Logger {\n  initOpenOrders(ix) {\n    console.log('Proxying initOpenOrders', this.ixToDisplay(ix));\n  }\n\n  newOrderV3(ix) {\n    console.log('Proxying newOrderV3', this.ixToDisplay(ix));\n  }\n\n  cancelOrderV2(ix) {\n    console.log('Proxying cancelOrderV2', this.ixToDisplay(ix));\n  }\n\n  cancelOrderByClientIdV2(ix) {\n    console.log('Proxying cancelOrderByClientIdV2', this.ixToDisplay(ix));\n  }\n\n  settleFunds(ix) {\n    console.log('Proxying settleFunds', this.ixToDisplay(ix));\n  }\n\n  closeOpenOrders(ix) {\n    console.log('Proxying closeOpenOrders', this.ixToDisplay(ix));\n  }\n\n  prune(ix) {\n    console.log('Proxying prune', this.ixToDisplay(ix));\n  }\n\n  ixToDisplay(ix) {\n    const keys = ix.keys.map(i => {\n      return { ...i,\n        pubkey: i.pubkey.toString()\n      };\n    });\n    const programId = ix.programId.toString();\n    const data = new Uint8Array(ix.data);\n    return {\n      keys,\n      programId,\n      data\n    };\n  }\n\n}\n\nexports.Logger = Logger;","map":{"version":3,"sources":["../../src/market-proxy/middleware.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = exports.ReferralFees = exports.OpenOrdersPda = void 0;\nconst anchor_1 = require(\"@project-serum/anchor\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nclass OpenOrdersPda {\n    constructor({ proxyProgramId, dexProgramId, }) {\n        this._proxyProgramId = proxyProgramId;\n        this._dexProgramId = dexProgramId;\n    }\n    // PDA authorized to create open orders accounts.\n    static async marketAuthority(market, dexProgramId, proxyProgramId) {\n        // b\"open-orders-init\"\n        const openOrdersStr = Buffer.from([\n            111,\n            112,\n            101,\n            110,\n            45,\n            111,\n            114,\n            100,\n            101,\n            114,\n            115,\n            45,\n            105,\n            110,\n            105,\n            116,\n        ]);\n        const [addr] = await web3_js_1.PublicKey.findProgramAddress([openOrdersStr, dexProgramId.toBuffer(), market.toBuffer()], proxyProgramId);\n        return addr;\n    }\n    static async openOrdersAddress(market, owner, dexProgramId, proxyProgramId) {\n        // b\"open-orders\".\n        const openOrdersStr = Buffer.from([\n            111,\n            112,\n            101,\n            110,\n            45,\n            111,\n            114,\n            100,\n            101,\n            114,\n            115,\n        ]);\n        const [addr] = await web3_js_1.PublicKey.findProgramAddress([\n            openOrdersStr,\n            dexProgramId.toBuffer(),\n            market.toBuffer(),\n            owner.toBuffer(),\n        ], proxyProgramId);\n        return addr;\n    }\n    initOpenOrders(ix) {\n        const market = ix.keys[2].pubkey;\n        const owner = ix.keys[1].pubkey;\n        // b\"open-orders\"\n        const openOrdersSeed = Buffer.from([\n            111,\n            112,\n            101,\n            110,\n            45,\n            111,\n            114,\n            100,\n            101,\n            114,\n            115,\n        ]);\n        // b\"open-orders-init\"\n        const openOrdersInitSeed = Buffer.from([\n            111,\n            112,\n            101,\n            110,\n            45,\n            111,\n            114,\n            100,\n            101,\n            114,\n            115,\n            45,\n            105,\n            110,\n            105,\n            116,\n        ]);\n        const [openOrders, bump] = anchor_1.utils.publicKey.findProgramAddressSync([\n            openOrdersSeed,\n            this._dexProgramId.toBuffer(),\n            market.toBuffer(),\n            owner.toBuffer(),\n        ], this._proxyProgramId);\n        const [marketAuthority, bumpInit] = anchor_1.utils.publicKey.findProgramAddressSync([openOrdersInitSeed, this._dexProgramId.toBuffer(), market.toBuffer()], this._proxyProgramId);\n        // Override the open orders account and market authority.\n        ix.keys[0].pubkey = openOrders;\n        ix.keys[4].pubkey = marketAuthority;\n        // Writable because it must pay for the PDA initialization.\n        ix.keys[1].isWritable = true;\n        // Prepend to the account list extra accounts needed for PDA initialization.\n        ix.keys = [\n            { pubkey: this._dexProgramId, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SystemProgram.programId, isSigner: false, isWritable: false },\n            ...ix.keys,\n        ];\n        // Prepend the ix discriminator, bump, and bumpInit to the instruction data,\n        // which saves the program compute by avoiding recalculating them in the\n        // program.\n        ix.data = Buffer.concat([Buffer.from([0, bump, bumpInit]), ix.data]);\n    }\n    newOrderV3(ix) {\n        ix.data = Buffer.concat([Buffer.from([1]), ix.data]);\n    }\n    cancelOrderV2(ix) {\n        ix.data = Buffer.concat([Buffer.from([2]), ix.data]);\n    }\n    cancelOrderByClientIdV2(ix) {\n        ix.data = Buffer.concat([Buffer.from([3]), ix.data]);\n    }\n    settleFunds(ix) {\n        ix.data = Buffer.concat([Buffer.from([4]), ix.data]);\n    }\n    closeOpenOrders(ix) {\n        ix.data = Buffer.concat([Buffer.from([5]), ix.data]);\n    }\n    prune(ix) {\n        ix.data = Buffer.concat([Buffer.from([6]), ix.data]);\n    }\n}\nexports.OpenOrdersPda = OpenOrdersPda;\nclass ReferralFees {\n    // eslint-disable-next-line\n    initOpenOrders(_ix) { }\n    // eslint-disable-next-line\n    newOrderV3(_ix) { }\n    // eslint-disable-next-line\n    cancelOrderV2(_ix) { }\n    // eslint-disable-next-line\n    cancelOrderByClientIdV2(_ix) { }\n    // eslint-disable-next-line\n    settleFunds(_ix) { }\n    // eslint-disable-next-line\n    closeOpenOrders(_ix) { }\n    // eslint-disable-next-line\n    prune(_ix) { }\n}\nexports.ReferralFees = ReferralFees;\nclass Logger {\n    initOpenOrders(ix) {\n        console.log('Proxying initOpenOrders', this.ixToDisplay(ix));\n    }\n    newOrderV3(ix) {\n        console.log('Proxying newOrderV3', this.ixToDisplay(ix));\n    }\n    cancelOrderV2(ix) {\n        console.log('Proxying cancelOrderV2', this.ixToDisplay(ix));\n    }\n    cancelOrderByClientIdV2(ix) {\n        console.log('Proxying cancelOrderByClientIdV2', this.ixToDisplay(ix));\n    }\n    settleFunds(ix) {\n        console.log('Proxying settleFunds', this.ixToDisplay(ix));\n    }\n    closeOpenOrders(ix) {\n        console.log('Proxying closeOpenOrders', this.ixToDisplay(ix));\n    }\n    prune(ix) {\n        console.log('Proxying prune', this.ixToDisplay(ix));\n    }\n    ixToDisplay(ix) {\n        const keys = ix.keys.map((i) => {\n            return { ...i, pubkey: i.pubkey.toString() };\n        });\n        const programId = ix.programId.toString();\n        const data = new Uint8Array(ix.data);\n        return { keys, programId, data };\n    }\n}\nexports.Logger = Logger;\n//# sourceMappingURL=middleware.js.map"]},"metadata":{},"sourceType":"script"}