{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DexInstructions = exports.decodeInstructionV2 = exports.decodeInstruction = exports.encodeInstructionV2 = exports.encodeInstruction = exports.INSTRUCTION_LAYOUT_V2 = exports.INSTRUCTION_LAYOUT = exports.NEW_ORDER_V3_OWNER_INDEX = exports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = void 0;\n\nconst buffer_layout_1 = require(\"buffer-layout\");\n\nconst layout_1 = require(\"./layout\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst token_instructions_1 = require(\"./token-instructions\");\n\nconst bn_js_1 = __importDefault(require(\"bn.js\")); // NOTE: Update these if the position of arguments for the settleFunds instruction changes\n\n\nexports.SETTLE_FUNDS_BASE_WALLET_INDEX = 5;\nexports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = 6; // NOTE: Update these if the position of arguments for the newOrder instruction changes\n\nexports.NEW_ORDER_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_OWNER_INDEX = 4; // NOTE: Update these if the position of arguments for the newOrder instruction changes\n\nexports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_V3_OWNER_INDEX = 7;\nexports.INSTRUCTION_LAYOUT = new layout_1.VersionedLayout(0, buffer_layout_1.union(buffer_layout_1.u32('instruction')));\nexports.INSTRUCTION_LAYOUT.inner.addVariant(0, buffer_layout_1.struct([layout_1.u64('baseLotSize'), layout_1.u64('quoteLotSize'), buffer_layout_1.u16('feeRateBps'), layout_1.u64('vaultSignerNonce'), layout_1.u64('quoteDustThreshold')]), 'initializeMarket');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(1, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u64('limitPrice'), layout_1.u64('maxQuantity'), layout_1.orderTypeLayout('orderType'), layout_1.u64('clientId')]), 'newOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(2, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'matchOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEvents');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(4, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u128('orderId'), layout_1.publicKeyLayout('openOrders'), buffer_layout_1.u8('openOrdersSlot')]), 'cancelOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(5, buffer_layout_1.struct([]), 'settleFunds');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(6, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientId');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(10, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u64('limitPrice'), layout_1.u64('maxBaseQuantity'), layout_1.u64('maxQuoteQuantity'), layout_1.selfTradeBehaviorLayout('selfTradeBehavior'), layout_1.orderTypeLayout('orderType'), layout_1.u64('clientId'), buffer_layout_1.u16('limit')]), 'newOrderV3');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(11, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u128('orderId')]), 'cancelOrderV2');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(12, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientIdV2');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(14, buffer_layout_1.struct([]), 'closeOpenOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(15, buffer_layout_1.struct([]), 'initOpenOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(16, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'prune');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(17, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEventsPermissioned');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(18, buffer_layout_1.struct([layout_1.u64('clientId0'), layout_1.u64('clientId1'), layout_1.u64('clientId2'), layout_1.u64('clientId3'), layout_1.u64('clientId4'), layout_1.u64('clientId5'), layout_1.u64('clientId6'), layout_1.u64('clientId7')]), 'cancelOrdersByClientIds');\nexports.INSTRUCTION_LAYOUT_V2 = new layout_1.VersionedLayout(0, buffer_layout_1.union(buffer_layout_1.u32('instruction')));\nexports.INSTRUCTION_LAYOUT_V2.inner.addVariant(10, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u64('limitPrice'), layout_1.u64('maxBaseQuantity'), layout_1.u64('maxQuoteQuantity'), layout_1.selfTradeBehaviorLayout('selfTradeBehavior'), layout_1.orderTypeLayout('orderType'), layout_1.u64('clientId'), buffer_layout_1.u16('limit'), layout_1.i64('maxTs')]), 'newOrderV3');\n\nfunction encodeInstruction(instruction) {\n  const b = Buffer.alloc(100);\n  return b.slice(0, exports.INSTRUCTION_LAYOUT.encode(instruction, b));\n}\n\nexports.encodeInstruction = encodeInstruction;\n\nfunction encodeInstructionV2(instruction) {\n  const b = Buffer.alloc(100);\n  return b.slice(0, exports.INSTRUCTION_LAYOUT_V2.encode(instruction, b));\n}\n\nexports.encodeInstructionV2 = encodeInstructionV2;\n\nfunction decodeInstruction(message) {\n  return exports.INSTRUCTION_LAYOUT.decode(message);\n}\n\nexports.decodeInstruction = decodeInstruction;\n\nfunction decodeInstructionV2(message) {\n  return exports.INSTRUCTION_LAYOUT_V2.decode(message);\n}\n\nexports.decodeInstructionV2 = decodeInstructionV2;\n\nclass DexInstructions {\n  static initializeMarket(_ref) {\n    let {\n      market,\n      requestQueue,\n      eventQueue,\n      bids,\n      asks,\n      baseVault,\n      quoteVault,\n      baseMint,\n      quoteMint,\n      baseLotSize,\n      quoteLotSize,\n      feeRateBps,\n      vaultSignerNonce,\n      quoteDustThreshold,\n      programId,\n      authority = undefined,\n      pruneAuthority = undefined,\n      crankAuthority = undefined\n    } = _ref;\n    let rentSysvar = new web3_js_1.PublicKey('SysvarRent111111111111111111111111111111111');\n    return new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: market,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: requestQueue,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: eventQueue,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: bids,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: asks,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: baseVault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: quoteVault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: baseMint,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: quoteMint,\n        isSigner: false,\n        isWritable: false\n      }, // Use a dummy address if using the new dex upgrade to save tx space.\n      {\n        pubkey: authority ? quoteMint : web3_js_1.SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }].concat(authority ? {\n        pubkey: authority,\n        isSigner: false,\n        isWritable: false\n      } : []).concat(authority && pruneAuthority ? {\n        pubkey: pruneAuthority,\n        isSigner: false,\n        isWritable: false\n      } : []).concat(authority && pruneAuthority && crankAuthority ? {\n        pubkey: crankAuthority,\n        isSigner: false,\n        isWritable: false\n      } : []),\n      programId,\n      data: encodeInstruction({\n        initializeMarket: {\n          baseLotSize,\n          quoteLotSize,\n          feeRateBps,\n          vaultSignerNonce,\n          quoteDustThreshold\n        }\n      })\n    });\n  }\n\n  static newOrder(_ref2) {\n    let {\n      market,\n      openOrders,\n      payer,\n      owner,\n      requestQueue,\n      baseVault,\n      quoteVault,\n      side,\n      limitPrice,\n      maxQuantity,\n      orderType,\n      clientId,\n      programId,\n      feeDiscountPubkey = null\n    } = _ref2;\n    const keys = [{\n      pubkey: market,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: openOrders,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: requestQueue,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: payer,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: owner,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: baseVault,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: quoteVault,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: token_instructions_1.TOKEN_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (feeDiscountPubkey) {\n      keys.push({\n        pubkey: feeDiscountPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      programId,\n      data: encodeInstruction({\n        newOrder: clientId ? {\n          side,\n          limitPrice,\n          maxQuantity,\n          orderType,\n          clientId\n        } : {\n          side,\n          limitPrice,\n          maxQuantity,\n          orderType\n        }\n      })\n    });\n  }\n\n  static newOrderV3(_ref3) {\n    let {\n      market,\n      openOrders,\n      payer,\n      owner,\n      requestQueue,\n      eventQueue,\n      bids,\n      asks,\n      baseVault,\n      quoteVault,\n      side,\n      limitPrice,\n      maxBaseQuantity,\n      maxQuoteQuantity,\n      orderType,\n      clientId,\n      programId,\n      selfTradeBehavior,\n      feeDiscountPubkey = null,\n      maxTs = null\n    } = _ref3;\n    const keys = [{\n      pubkey: market,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: openOrders,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: requestQueue,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: eventQueue,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: bids,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: asks,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: payer,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: owner,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: baseVault,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: quoteVault,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: token_instructions_1.TOKEN_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (feeDiscountPubkey) {\n      keys.push({\n        pubkey: feeDiscountPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n\n    const encoder = maxTs ? encodeInstructionV2 : encodeInstruction;\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      programId,\n      data: encoder({\n        newOrderV3: {\n          side,\n          limitPrice,\n          maxBaseQuantity,\n          maxQuoteQuantity,\n          selfTradeBehavior,\n          orderType,\n          clientId,\n          limit: 65535,\n          maxTs: new bn_js_1.default(maxTs !== null && maxTs !== void 0 ? maxTs : '9223372036854775807')\n        }\n      })\n    });\n  }\n\n  static matchOrders(_ref4) {\n    let {\n      market,\n      requestQueue,\n      eventQueue,\n      bids,\n      asks,\n      baseVault,\n      quoteVault,\n      limit,\n      programId\n    } = _ref4;\n    return new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: market,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: requestQueue,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: eventQueue,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: bids,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: asks,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: baseVault,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: quoteVault,\n        isSigner: false,\n        isWritable: true\n      }],\n      programId,\n      data: encodeInstruction({\n        matchOrders: {\n          limit\n        }\n      })\n    });\n  }\n\n  static consumeEvents(_ref5) {\n    let {\n      market,\n      eventQueue,\n      coinFee,\n      pcFee,\n      openOrdersAccounts,\n      limit,\n      programId\n    } = _ref5;\n    return new web3_js_1.TransactionInstruction({\n      keys: [...openOrdersAccounts.map(account => ({\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      })), {\n        pubkey: market,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: eventQueue,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: coinFee,\n        isSigner: false,\n        isWriteable: true\n      }, {\n        pubkey: pcFee,\n        isSigner: false,\n        isWritable: true\n      }],\n      programId,\n      data: encodeInstruction({\n        consumeEvents: {\n          limit\n        }\n      })\n    });\n  }\n\n  static consumeEventsPermissioned(_ref6) {\n    let {\n      market,\n      eventQueue,\n      crankAuthority,\n      openOrdersAccounts,\n      limit,\n      programId\n    } = _ref6;\n    return new web3_js_1.TransactionInstruction({\n      keys: [...openOrdersAccounts.map(account => ({\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      })), {\n        pubkey: market,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: eventQueue,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: crankAuthority,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId,\n      data: encodeInstruction({\n        consumeEventsPermissioned: {\n          limit\n        }\n      })\n    });\n  }\n\n  static cancelOrder(_ref7) {\n    let {\n      market,\n      openOrders,\n      owner,\n      requestQueue,\n      side,\n      orderId,\n      openOrdersSlot,\n      programId\n    } = _ref7;\n    return new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: market,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: openOrders,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: requestQueue,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId,\n      data: encodeInstruction({\n        cancelOrder: {\n          side,\n          orderId,\n          openOrders,\n          openOrdersSlot\n        }\n      })\n    });\n  }\n\n  static cancelOrderV2(order) {\n    const {\n      market,\n      bids,\n      asks,\n      eventQueue,\n      openOrders,\n      owner,\n      side,\n      orderId,\n      programId\n    } = order;\n    return new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: market,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: bids,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: asks,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: openOrders,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: eventQueue,\n        isSigner: false,\n        isWritable: true\n      }],\n      programId,\n      data: encodeInstruction({\n        cancelOrderV2: {\n          side,\n          orderId\n        }\n      })\n    });\n  }\n\n  static cancelOrderByClientId(_ref8) {\n    let {\n      market,\n      openOrders,\n      owner,\n      requestQueue,\n      clientId,\n      programId\n    } = _ref8;\n    return new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: market,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: openOrders,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: requestQueue,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId,\n      data: encodeInstruction({\n        cancelOrderByClientId: {\n          clientId\n        }\n      })\n    });\n  }\n\n  static cancelOrderByClientIdV2(_ref9) {\n    let {\n      market,\n      openOrders,\n      owner,\n      bids,\n      asks,\n      eventQueue,\n      clientId,\n      programId\n    } = _ref9;\n    return new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: market,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: bids,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: asks,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: openOrders,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: eventQueue,\n        isSigner: false,\n        isWritable: true\n      }],\n      programId,\n      data: encodeInstruction({\n        cancelOrderByClientIdV2: {\n          clientId\n        }\n      })\n    });\n  }\n\n  static cancelOrdersByClientIds(_ref10) {\n    let {\n      market,\n      openOrders,\n      owner,\n      bids,\n      asks,\n      eventQueue,\n      clientIds,\n      programId\n    } = _ref10;\n\n    if (clientIds.length > 8) {\n      throw new Error(\"Number of client ids cannot exceed 8!\");\n    }\n\n    while (clientIds.length < 8) {\n      clientIds.push(new bn_js_1.default(0));\n    }\n\n    return new web3_js_1.TransactionInstruction({\n      keys: [{\n        pubkey: market,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: bids,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: asks,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: openOrders,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: eventQueue,\n        isSigner: false,\n        isWritable: true\n      }],\n      programId,\n      data: encodeInstruction({\n        cancelOrdersByClientIds: Object.fromEntries(clientIds.map((clientId, i) => [`clientId${i}`, clientId]))\n      })\n    });\n  }\n\n  static settleFunds(_ref11) {\n    let {\n      market,\n      openOrders,\n      owner,\n      baseVault,\n      quoteVault,\n      baseWallet,\n      quoteWallet,\n      vaultSigner,\n      programId,\n      referrerQuoteWallet = null\n    } = _ref11;\n    const keys = [{\n      pubkey: market,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: openOrders,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: owner,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: baseVault,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: quoteVault,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: baseWallet,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: quoteWallet,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: vaultSigner,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: token_instructions_1.TOKEN_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (referrerQuoteWallet) {\n      keys.push({\n        pubkey: referrerQuoteWallet,\n        isSigner: false,\n        isWritable: true\n      });\n    }\n\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      programId,\n      data: encodeInstruction({\n        settleFunds: {}\n      })\n    });\n  }\n\n  static closeOpenOrders(_ref12) {\n    let {\n      market,\n      openOrders,\n      owner,\n      solWallet,\n      programId\n    } = _ref12;\n    const keys = [{\n      pubkey: openOrders,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: owner,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: solWallet,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: market,\n      isSigner: false,\n      isWritable: false\n    }];\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      programId,\n      data: encodeInstruction({\n        closeOpenOrders: {}\n      })\n    });\n  }\n\n  static initOpenOrders(_ref13) {\n    let {\n      market,\n      openOrders,\n      owner,\n      programId,\n      marketAuthority\n    } = _ref13;\n    const keys = [{\n      pubkey: openOrders,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: owner,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: market,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }].concat(marketAuthority ? {\n      pubkey: marketAuthority,\n      isSigner: false,\n      isWritable: false\n    } : []);\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      programId,\n      data: encodeInstruction({\n        initOpenOrders: {}\n      })\n    });\n  }\n\n  static prune(_ref14) {\n    let {\n      market,\n      bids,\n      asks,\n      eventQueue,\n      pruneAuthority,\n      openOrders,\n      openOrdersOwner,\n      programId,\n      limit\n    } = _ref14;\n    const keys = [{\n      pubkey: market,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: bids,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: asks,\n      isSigner: false,\n      isWritable: true\n    }, // Keep signer false so that one can use a PDA.\n    {\n      pubkey: pruneAuthority,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: openOrders,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: openOrdersOwner,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: eventQueue,\n      isSigner: false,\n      isWritable: true\n    }];\n    return new web3_js_1.TransactionInstruction({\n      keys,\n      programId,\n      data: encodeInstruction({\n        prune: {\n          limit\n        }\n      })\n    });\n  }\n\n}\n\nexports.DexInstructions = DexInstructions;","map":{"version":3,"sources":["../src/instructions.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DexInstructions = exports.decodeInstructionV2 = exports.decodeInstruction = exports.encodeInstructionV2 = exports.encodeInstruction = exports.INSTRUCTION_LAYOUT_V2 = exports.INSTRUCTION_LAYOUT = exports.NEW_ORDER_V3_OWNER_INDEX = exports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst token_instructions_1 = require(\"./token-instructions\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n// NOTE: Update these if the position of arguments for the settleFunds instruction changes\nexports.SETTLE_FUNDS_BASE_WALLET_INDEX = 5;\nexports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = 6;\n// NOTE: Update these if the position of arguments for the newOrder instruction changes\nexports.NEW_ORDER_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_OWNER_INDEX = 4;\n// NOTE: Update these if the position of arguments for the newOrder instruction changes\nexports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_V3_OWNER_INDEX = 7;\nexports.INSTRUCTION_LAYOUT = new layout_1.VersionedLayout(0, buffer_layout_1.union(buffer_layout_1.u32('instruction')));\nexports.INSTRUCTION_LAYOUT.inner.addVariant(0, buffer_layout_1.struct([\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    buffer_layout_1.u16('feeRateBps'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.u64('quoteDustThreshold'),\n]), 'initializeMarket');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(1, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxQuantity'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n]), 'newOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(2, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'matchOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEvents');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(4, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    buffer_layout_1.u8('openOrdersSlot'),\n]), 'cancelOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(5, buffer_layout_1.struct([]), 'settleFunds');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(6, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientId');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(10, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxBaseQuantity'),\n    layout_1.u64('maxQuoteQuantity'),\n    layout_1.selfTradeBehaviorLayout('selfTradeBehavior'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n    buffer_layout_1.u16('limit'),\n]), 'newOrderV3');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(11, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u128('orderId')]), 'cancelOrderV2');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(12, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientIdV2');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(14, buffer_layout_1.struct([]), 'closeOpenOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(15, buffer_layout_1.struct([]), 'initOpenOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(16, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'prune');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(17, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEventsPermissioned');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(18, buffer_layout_1.struct([\n    layout_1.u64('clientId0'),\n    layout_1.u64('clientId1'),\n    layout_1.u64('clientId2'),\n    layout_1.u64('clientId3'),\n    layout_1.u64('clientId4'),\n    layout_1.u64('clientId5'),\n    layout_1.u64('clientId6'),\n    layout_1.u64('clientId7')\n]), 'cancelOrdersByClientIds');\nexports.INSTRUCTION_LAYOUT_V2 = new layout_1.VersionedLayout(0, buffer_layout_1.union(buffer_layout_1.u32('instruction')));\nexports.INSTRUCTION_LAYOUT_V2.inner.addVariant(10, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxBaseQuantity'),\n    layout_1.u64('maxQuoteQuantity'),\n    layout_1.selfTradeBehaviorLayout('selfTradeBehavior'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n    buffer_layout_1.u16('limit'),\n    layout_1.i64('maxTs'),\n]), 'newOrderV3');\nfunction encodeInstruction(instruction) {\n    const b = Buffer.alloc(100);\n    return b.slice(0, exports.INSTRUCTION_LAYOUT.encode(instruction, b));\n}\nexports.encodeInstruction = encodeInstruction;\nfunction encodeInstructionV2(instruction) {\n    const b = Buffer.alloc(100);\n    return b.slice(0, exports.INSTRUCTION_LAYOUT_V2.encode(instruction, b));\n}\nexports.encodeInstructionV2 = encodeInstructionV2;\nfunction decodeInstruction(message) {\n    return exports.INSTRUCTION_LAYOUT.decode(message);\n}\nexports.decodeInstruction = decodeInstruction;\nfunction decodeInstructionV2(message) {\n    return exports.INSTRUCTION_LAYOUT_V2.decode(message);\n}\nexports.decodeInstructionV2 = decodeInstructionV2;\nclass DexInstructions {\n    static initializeMarket({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, baseMint, quoteMint, baseLotSize, quoteLotSize, feeRateBps, vaultSignerNonce, quoteDustThreshold, programId, authority = undefined, pruneAuthority = undefined, crankAuthority = undefined, }) {\n        let rentSysvar = new web3_js_1.PublicKey('SysvarRent111111111111111111111111111111111');\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n                { pubkey: baseMint, isSigner: false, isWritable: false },\n                { pubkey: quoteMint, isSigner: false, isWritable: false },\n                // Use a dummy address if using the new dex upgrade to save tx space.\n                {\n                    pubkey: authority ? quoteMint : web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n            ]\n                .concat(authority\n                ? { pubkey: authority, isSigner: false, isWritable: false }\n                : [])\n                .concat(authority && pruneAuthority\n                ? { pubkey: pruneAuthority, isSigner: false, isWritable: false }\n                : [])\n                .concat(authority && pruneAuthority && crankAuthority\n                ? { pubkey: crankAuthority, isSigner: false, isWritable: false }\n                : []),\n            programId,\n            data: encodeInstruction({\n                initializeMarket: {\n                    baseLotSize,\n                    quoteLotSize,\n                    feeRateBps,\n                    vaultSignerNonce,\n                    quoteDustThreshold,\n                },\n            }),\n        });\n    }\n    static newOrder({ market, openOrders, payer, owner, requestQueue, baseVault, quoteVault, side, limitPrice, maxQuantity, orderType, clientId, programId, feeDiscountPubkey = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                newOrder: clientId\n                    ? { side, limitPrice, maxQuantity, orderType, clientId }\n                    : { side, limitPrice, maxQuantity, orderType },\n            }),\n        });\n    }\n    static newOrderV3({ market, openOrders, payer, owner, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, side, limitPrice, maxBaseQuantity, maxQuoteQuantity, orderType, clientId, programId, selfTradeBehavior, feeDiscountPubkey = null, maxTs = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: eventQueue, isSigner: false, isWritable: true },\n            { pubkey: bids, isSigner: false, isWritable: true },\n            { pubkey: asks, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        const encoder = maxTs ? encodeInstructionV2 : encodeInstruction;\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encoder({\n                newOrderV3: {\n                    side,\n                    limitPrice,\n                    maxBaseQuantity,\n                    maxQuoteQuantity,\n                    selfTradeBehavior,\n                    orderType,\n                    clientId,\n                    limit: 65535,\n                    maxTs: new bn_js_1.default(maxTs !== null && maxTs !== void 0 ? maxTs : '9223372036854775807'),\n                },\n            }),\n        });\n    }\n    static matchOrders({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ matchOrders: { limit } }),\n        });\n    }\n    static consumeEvents({ market, eventQueue, coinFee, pcFee, openOrdersAccounts, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                ...openOrdersAccounts.map((account) => ({\n                    pubkey: account,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: coinFee, isSigner: false, isWriteable: true },\n                { pubkey: pcFee, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ consumeEvents: { limit } }),\n        });\n    }\n    static consumeEventsPermissioned({ market, eventQueue, crankAuthority, openOrdersAccounts, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                ...openOrdersAccounts.map((account) => ({\n                    pubkey: account,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: crankAuthority, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({ consumeEventsPermissioned: { limit } }),\n        });\n    }\n    static cancelOrder({ market, openOrders, owner, requestQueue, side, orderId, openOrdersSlot, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrder: { side, orderId, openOrders, openOrdersSlot },\n            }),\n        });\n    }\n    static cancelOrderV2(order) {\n        const { market, bids, asks, eventQueue, openOrders, owner, side, orderId, programId, } = order;\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderV2: { side, orderId },\n            }),\n        });\n    }\n    static cancelOrderByClientId({ market, openOrders, owner, requestQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientId: { clientId },\n            }),\n        });\n    }\n    static cancelOrderByClientIdV2({ market, openOrders, owner, bids, asks, eventQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientIdV2: { clientId },\n            }),\n        });\n    }\n    static cancelOrdersByClientIds({ market, openOrders, owner, bids, asks, eventQueue, clientIds, programId, }) {\n        if (clientIds.length > 8) {\n            throw new Error(\"Number of client ids cannot exceed 8!\");\n        }\n        while (clientIds.length < 8) {\n            clientIds.push(new bn_js_1.default(0));\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrdersByClientIds: Object.fromEntries(clientIds.map((clientId, i) => [`clientId${i}`, clientId])),\n            }),\n        });\n    }\n    static settleFunds({ market, openOrders, owner, baseVault, quoteVault, baseWallet, quoteWallet, vaultSigner, programId, referrerQuoteWallet = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: baseWallet, isSigner: false, isWritable: true },\n            { pubkey: quoteWallet, isSigner: false, isWritable: true },\n            { pubkey: vaultSigner, isSigner: false, isWritable: false },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n        ];\n        if (referrerQuoteWallet) {\n            keys.push({\n                pubkey: referrerQuoteWallet,\n                isSigner: false,\n                isWritable: true,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                settleFunds: {},\n            }),\n        });\n    }\n    static closeOpenOrders({ market, openOrders, owner, solWallet, programId }) {\n        const keys = [\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: solWallet, isSigner: false, isWritable: true },\n            { pubkey: market, isSigner: false, isWritable: false },\n        ];\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                closeOpenOrders: {},\n            }),\n        });\n    }\n    static initOpenOrders({ market, openOrders, owner, programId, marketAuthority, }) {\n        const keys = [\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: market, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ].concat(marketAuthority\n            ? { pubkey: marketAuthority, isSigner: false, isWritable: false }\n            : []);\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                initOpenOrders: {},\n            }),\n        });\n    }\n    static prune({ market, bids, asks, eventQueue, pruneAuthority, openOrders, openOrdersOwner, programId, limit, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: bids, isSigner: false, isWritable: true },\n            { pubkey: asks, isSigner: false, isWritable: true },\n            // Keep signer false so that one can use a PDA.\n            { pubkey: pruneAuthority, isSigner: false, isWritable: false },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: openOrdersOwner, isSigner: false, isWritable: false },\n            { pubkey: eventQueue, isSigner: false, isWritable: true },\n        ];\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                prune: { limit },\n            }),\n        });\n    }\n}\nexports.DexInstructions = DexInstructions;\n//# sourceMappingURL=instructions.js.map"]},"metadata":{},"sourceType":"script"}