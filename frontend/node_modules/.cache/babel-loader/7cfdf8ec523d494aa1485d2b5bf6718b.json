{"ast":null,"code":"import { Blob, seq, struct, Structure, u32, u8, u16, ns64 } from 'buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nexport const NUM_TOKENS = 8;\nexport const MAX_TOKENS = 50;\nexport const NUM_MARGIN = 2;\nexport const MAX_INVESTORS = 10;\n\nclass PublicKeyLayout extends Blob {\n  constructor(property) {\n    super(32, property);\n  }\n\n  decode(b, offset) {\n    return new PublicKey(super.decode(b, offset));\n  }\n\n  encode(src, b, offset) {\n    return super.encode(src.toBuffer(), b, offset);\n  }\n\n}\n\nexport function publicKeyLayout() {\n  let property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return new PublicKeyLayout(property);\n}\n\nclass BNLayout extends Blob {\n  constructor(number, property) {\n    super(number, property); // restore prototype chain\n\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n\n  decode(b, offset) {\n    return new BN(super.decode(b, offset), 10, 'le');\n  }\n\n  encode(src, b, offset) {\n    return super.encode(src.toArrayLike(Buffer, 'le', this['span']), b, offset);\n  }\n\n}\n\nclass U64F64Layout extends Blob {\n  constructor(property) {\n    super(16, property);\n  }\n\n  decode(b, offset) {\n    const raw = new BN(super.decode(b, offset), 10, 'le');\n    return raw / Math.pow(2, 64);\n  }\n\n  encode(src, b, offset) {\n    console.log(\"src ::: \", src);\n    return super.encode(src.toArrayLike(Buffer, 'le', this['span']), b, offset);\n  }\n\n}\n\nexport function U64F64() {\n  let property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return new U64F64Layout(property);\n}\n_c = U64F64;\nexport function u64() {\n  let property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return new BNLayout(8, property);\n}\nexport function u128() {\n  let property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return new BNLayout(16, property);\n}\nconst zeroKey = new PublicKey(new Uint8Array(32));\nexport class MangoInfo {\n  constructor(decoded) {\n    Object.assign(this, decoded);\n  } // isEmpty() {\n  //   return this.mango_account.equals(zeroKey);\n  // }\n\n\n} // export class MangoInfoLayout extends Structure {\n//   constructor(property) {\n//     super(\n//       [\n//         publicKeyLayout('mango_account'),\n//         seq(u8('perp_markets'), 4),\n//         u8('deposit_index'),\n//         u8('markets_active'),\n//         u8('deposits_active'),\n//         u8('xpadding'),\n//         seq(u64('investor_debts'), 2),\n//         seq(u8('padding'), 24),\n//       ],\n//       property,\n//     );\n//   }\n//   decode(b, offset) {\n//     return new MangoInfo(super.decode(b, offset));\n//   }\n//   encode(src, b, offset) {\n//     return super.encode(src.toBuffer(), b, offset);\n//   }\n// }\n// export function mangoInfoLayout(property = '') {\n//   return new MangoInfoLayout(property);\n// }\n\nexport const PLATFORM_DATA = struct([u8('is_initialized'), u8('version'), u8('router_nonce'), u8('no_of_active_funds'), u8('token_count'), // seq(u8(), 3, 'padding'),\nu8('padding'), u16('total_v3_funds'), publicKeyLayout('router'), publicKeyLayout('investin_admin'), publicKeyLayout('investin_vault'), seq(struct([publicKeyLayout('mint'), u64('decimals'), publicKeyLayout('pool_coin_account'), publicKeyLayout('pool_pc_account'), U64F64('pool_price'), ns64('last_updated'), u64('padding')]), MAX_TOKENS, 'token_list')]);\nexport const FUND_DATA = struct([u8('is_initialized'), u8('number_of_active_investments'), u8('no_of_investments'), u8('signer_nonce'), u8('no_of_margin_positions'), u8('no_of_assets'), u16('position_count'), u8('version'), u8('is_private'), u16('fund_v3_index'), seq(u8(), 4, 'padding'), u64('min_amount'), U64F64('min_return'), U64F64('performance_fee_percentage'), U64F64('total_amount'), U64F64('prev_performance'), u64('amount_in_router'), U64F64('performance_fee'), publicKeyLayout('manager_account'), publicKeyLayout('fund_pda'), seq(struct([u8('is_active'), seq(u8(), 3, 'index'), u8('mux'), u8('is_on_mango'), seq(u8(), 2, 'padding'), u64('balance'), u64('debt'), publicKeyLayout('vault')]), NUM_TOKENS, 'tokens'), seq(publicKeyLayout(), MAX_INVESTORS, 'investors'), struct([publicKeyLayout('mango_account'), seq(u8(), 4, 'perp_markets'), u8('deposit_index'), u8('markets_active'), u8('deposits_active'), u8('xpadding'), seq(u64(), 2, 'investor_debts'), seq(u8('padding'), 24)], 'mango_positions'), // mangoInfoLayout('mango_positions'),\nseq(u8(), 80, 'margin_update_padding'), seq(u8(), 32, 'padding')]);\nexport const INVESTOR_DATA = struct([u8('is_initialized'), u8('has_withdrawn'), u8('withdrawn_from_margin'), seq(u8('padding'), 5), publicKeyLayout('owner'), u64('amount'), U64F64('start_performance'), u64('amount_in_router'), publicKeyLayout('manager'), seq(U64F64(), NUM_MARGIN, 'margin_debt'), seq(u64(), NUM_MARGIN, 'margin_position_id'), seq(u8(), NUM_TOKENS, 'token_indexes'), seq(u64(), NUM_TOKENS, 'token_debts'), seq(u8(), 32, 'xpadding')]);\nexport const SPL_TOKEN_MINT_DATA = struct([publicKeyLayout('mint_authority'), u64('supply'), u8('decimals'), u8('is_initialized'), publicKeyLayout('freez_authority')]);\nexport const AMM_INFO_LAYOUT_V4 = struct([u64('status'), u64('nonce'), u64('orderNum'), u64('depth'), u64('coinDecimals'), u64('pcDecimals'), u64('state'), u64('resetFlag'), u64('minSize'), u64('volMaxCutRatio'), u64('amountWaveRatio'), u64('coinLotSize'), u64('pcLotSize'), u64('minPriceMultiplier'), u64('maxPriceMultiplier'), u64('systemDecimalsValue'), // Fees\nu64('minSeparateNumerator'), u64('minSeparateDenominator'), u64('tradeFeeNumerator'), u64('tradeFeeDenominator'), u64('pnlNumerator'), u64('pnlDenominator'), u64('swapFeeNumerator'), u64('swapFeeDenominator'), // OutPutData\nu64('needTakePnlCoin'), u64('needTakePnlPc'), u64('totalPnlPc'), u64('totalPnlCoin'), u128('poolTotalDepositPc'), u128('poolTotalDepositCoin'), u128('swapCoinInAmount'), u128('swapPcOutAmount'), u64('swapCoin2PcFee'), u128('swapPcInAmount'), u128('swapCoinOutAmount'), u64('swapPc2CoinFee'), publicKeyLayout('poolCoinTokenAccount'), publicKeyLayout('poolPcTokenAccount'), publicKeyLayout('coinMintAddress'), publicKeyLayout('pcMintAddress'), publicKeyLayout('lpMintAddress'), publicKeyLayout('ammOpenOrders'), publicKeyLayout('serumMarket'), publicKeyLayout('serumProgramId'), publicKeyLayout('ammTargetOrders'), publicKeyLayout('poolWithdrawQueue'), publicKeyLayout('poolTempLpTokenAccount'), publicKeyLayout('ammOwner'), publicKeyLayout('pnlOwner')]); // Aggregator Accounts\n\nexport const PRICE_DATA = struct([u32('count'), u32('decimals'), seq(struct([publicKeyLayout('token_mint'), publicKeyLayout('pool_account'), publicKeyLayout('base_pool_account'), u64('decimals'), u64('token_price'), ns64('last_updated')]), MAX_TOKENS, 'prices')]);\nexport const FUND_PDA_DATA = struct([u8('is_initialized'), u8('number_of_active_investments'), u8('no_of_investments'), u8('signer_nonce'), u8('no_of_margin_positions'), u8('no_of_assets'), u16('position_count'), u8('version'), u8('is_private'), u16('fund_v3_index'), seq(u8(), 4, 'padding'), u64('min_amount'), U64F64('min_return'), U64F64('performance_fee_percentage'), U64F64('total_amount'), U64F64('prev_performance'), u64('amount_in_router'), U64F64('performance_fee'), publicKeyLayout('manager_account'), publicKeyLayout('fund_pda'), seq(struct([u8('is_active'), seq(u8(), 3, 'index'), u8('mux'), u8('is_on_mango'), seq(u8(), 2, 'padding'), u64('balance'), u64('debt'), publicKeyLayout('vault')]), NUM_TOKENS, 'tokens'), seq(publicKeyLayout(), MAX_INVESTORS, 'investors'), struct([publicKeyLayout('mango_account'), seq(u8(), 3, 'perp_markets'), u8('padding'), u8('deposit_index'), u8('markets_active'), u8('deposits_active'), u8('xpadding'), seq(u64(), 2, 'investor_debts'), seq(u8('padding'), 24)], 'mango_positions'), struct([u8('is_active'), u8('is_split'), u8('hop'), u8('count'), u8('token_in_slot'), u8('token_out_slot'), seq(u8('padding'), 2), publicKeyLayout('token_in'), publicKeyLayout('token_out'), u64('amount_in'), u64('min_amount_out')], 'guard'), seq(u8(), 24, 'margin_update_padding'), seq(u8(), 2024, 'migration_additonal_padding')]);\n\nvar _c;\n\n$RefreshReg$(_c, \"U64F64\");","map":{"version":3,"sources":["/Users/zohebshahzan/code/Solana-2/frontend/src/utils/programLayouts.js"],"names":["Blob","seq","struct","Structure","u32","u8","u16","ns64","PublicKey","BN","NUM_TOKENS","MAX_TOKENS","NUM_MARGIN","MAX_INVESTORS","PublicKeyLayout","constructor","property","decode","b","offset","encode","src","toBuffer","publicKeyLayout","BNLayout","number","Object","setPrototypeOf","new","target","prototype","toArrayLike","Buffer","U64F64Layout","raw","Math","pow","console","log","U64F64","u64","u128","zeroKey","Uint8Array","MangoInfo","decoded","assign","PLATFORM_DATA","FUND_DATA","INVESTOR_DATA","SPL_TOKEN_MINT_DATA","AMM_INFO_LAYOUT_V4","PRICE_DATA","FUND_PDA_DATA"],"mappings":"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","sourcesContent":["import { Blob, seq, struct,Structure, u32, u8, u16, ns64 } from 'buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\n\nexport const NUM_TOKENS = 8\nexport const MAX_TOKENS = 50\nexport const NUM_MARGIN = 2\nexport const MAX_INVESTORS = 10\n\nclass PublicKeyLayout extends Blob {\n  constructor(property) {\n    super(32, property);\n  }\n\n  decode(b, offset) {\n    return new PublicKey(super.decode(b, offset));\n  }\n\n  encode(src, b, offset) {\n    return super.encode(src.toBuffer(), b, offset);\n  }\n}\n\nexport function publicKeyLayout(property = \"\") {\n  return new PublicKeyLayout(property);\n}\n\nclass BNLayout extends Blob {\n  constructor(number, property) {\n    super(number, property);\n    // restore prototype chain\n    Object.setPrototypeOf(this, new.target.prototype)\n  }\n\n  decode(b, offset) {\n    return new BN(super.decode(b, offset), 10, 'le');\n  }\n\n  encode(src, b, offset) {\n    return super.encode(src.toArrayLike(Buffer, 'le', this['span']), b, offset);\n  }\n}\n\nclass U64F64Layout extends Blob {\n  constructor(property) {\n    super(16, property);\n  }\n\n  decode(b, offset) {\n    const raw = new BN(super.decode(b, offset), 10, 'le');\n\n    return raw / Math.pow(2, 64);\n  }\n\n  encode(src, b, offset) {\n    console.log(\"src ::: \", src)\n    return super.encode(src.toArrayLike(Buffer, 'le', this['span']), b, offset);\n  }\n}\n\nexport function U64F64(property = \"\") {\n  return new U64F64Layout(property)\n}\n\nexport function u64(property = \"\") {\n  return new BNLayout(8, property);\n}\n\nexport function u128(property = \"\") {\n  return new BNLayout(16, property);\n}\n\nconst zeroKey = new PublicKey(new Uint8Array(32));\nexport class MangoInfo {\n\n  mango_account;\n  perp_markets;\n  deposit_index;\n  markets_active;\n  deposits_active;\n  xpadding;\n  investor_debts;\n  padding;\n\n  constructor(decoded) {\n    Object.assign(this, decoded);\n  }\n  // isEmpty() {\n  //   return this.mango_account.equals(zeroKey);\n  // }\n}\n\n \n// export class MangoInfoLayout extends Structure {\n//   constructor(property) {\n//     super(\n//       [\n//         publicKeyLayout('mango_account'),\n//         seq(u8('perp_markets'), 4),\n//         u8('deposit_index'),\n//         u8('markets_active'),\n//         u8('deposits_active'),\n//         u8('xpadding'),\n//         seq(u64('investor_debts'), 2),\n//         seq(u8('padding'), 24),\n//       ],\n//       property,\n//     );\n//   }\n//   decode(b, offset) {\n//     return new MangoInfo(super.decode(b, offset));\n//   }\n//   encode(src, b, offset) {\n//     return super.encode(src.toBuffer(), b, offset);\n//   }\n// }\n// export function mangoInfoLayout(property = '') {\n//   return new MangoInfoLayout(property);\n// }\n \nexport const PLATFORM_DATA = struct([\n  u8('is_initialized'),\n  u8('version'),\n  u8('router_nonce'),\n  u8('no_of_active_funds'),\n  u8('token_count'),\n  // seq(u8(), 3, 'padding'),\n\n  u8('padding'),\n  u16('total_v3_funds'),\n\n  publicKeyLayout('router'),\n  publicKeyLayout('investin_admin'),\n  publicKeyLayout('investin_vault'),\n\n  seq(\n    struct([\n      publicKeyLayout('mint'),\n      u64('decimals'),\n      publicKeyLayout('pool_coin_account'),\n      publicKeyLayout('pool_pc_account'),\n      U64F64('pool_price'),\n      ns64('last_updated'),\n      u64('padding')\n    ]),\n    MAX_TOKENS, 'token_list'\n  ),\n\n])\n\nexport const FUND_DATA = struct([\n  u8('is_initialized'),\n  u8('number_of_active_investments'),\n  u8('no_of_investments'),\n  u8('signer_nonce'),\n  u8('no_of_margin_positions'),\n  u8('no_of_assets'),\n  u16('position_count'),\n\n  u8('version'),\n  u8('is_private'),\n  u16('fund_v3_index'),\n  seq(u8(), 4, 'padding'),\n\n  u64('min_amount'),\n  U64F64('min_return'),\n  U64F64('performance_fee_percentage'),\n  U64F64('total_amount'),\n  U64F64('prev_performance'),\n\n  u64('amount_in_router'),\n  U64F64('performance_fee'),\n  publicKeyLayout('manager_account'),\n  publicKeyLayout('fund_pda'),\n  seq(\n    struct([\n      u8('is_active'),\n      seq(u8(),3,'index'),\n      u8('mux'),\n      u8('is_on_mango'),\n      seq(u8(), 2, 'padding'),\n      u64('balance'),\n      u64('debt'),\n      publicKeyLayout('vault')\n    ]),\n    NUM_TOKENS, 'tokens'\n  ),\n  seq(publicKeyLayout(), MAX_INVESTORS, 'investors'),\n  \n  struct([\n      publicKeyLayout('mango_account'),\n      seq(u8(),4,'perp_markets'),\n      u8('deposit_index'),\n      u8('markets_active'),\n      u8('deposits_active'),\n      u8('xpadding'),\n      seq(u64(), 2, 'investor_debts'),\n      seq(u8('padding'), 24),\n    ],'mango_positions'),\n\n  // mangoInfoLayout('mango_positions'),\n  \n     \n  seq(u8(), 80, 'margin_update_padding'),\n  seq(u8(), 32, 'padding'),\n\n])\n\nexport const INVESTOR_DATA = struct([\n  u8('is_initialized'),\n  u8('has_withdrawn'),\n  u8('withdrawn_from_margin'),\n  seq(u8('padding'), 5),\n\n\n  publicKeyLayout('owner'),\n  u64('amount'),\n  U64F64('start_performance'),\n  u64('amount_in_router'),\n  publicKeyLayout('manager'),\n  seq(U64F64(), NUM_MARGIN, 'margin_debt'),\n  seq(u64(), NUM_MARGIN, 'margin_position_id'),\n\n  seq(u8(), NUM_TOKENS, 'token_indexes'),\n  seq(u64(), NUM_TOKENS, 'token_debts'),\n\n  seq(u8(), 32, 'xpadding')\n\n])\n\nexport const SPL_TOKEN_MINT_DATA = struct([\n  publicKeyLayout('mint_authority'),\n  u64('supply'),\n  u8('decimals'),\n  u8('is_initialized'),\n  publicKeyLayout('freez_authority'),\n])\n\n\n\nexport const AMM_INFO_LAYOUT_V4 = struct([\n  u64('status'),\n  u64('nonce'),\n  u64('orderNum'),\n  u64('depth'),\n  u64('coinDecimals'),\n  u64('pcDecimals'),\n  u64('state'),\n  u64('resetFlag'),\n  u64('minSize'),\n  u64('volMaxCutRatio'),\n  u64('amountWaveRatio'),\n  u64('coinLotSize'),\n  u64('pcLotSize'),\n  u64('minPriceMultiplier'),\n  u64('maxPriceMultiplier'),\n  u64('systemDecimalsValue'),\n  // Fees\n  u64('minSeparateNumerator'),\n  u64('minSeparateDenominator'),\n  u64('tradeFeeNumerator'),\n  u64('tradeFeeDenominator'),\n  u64('pnlNumerator'),\n  u64('pnlDenominator'),\n  u64('swapFeeNumerator'),\n  u64('swapFeeDenominator'),\n  // OutPutData\n  u64('needTakePnlCoin'),\n  u64('needTakePnlPc'),\n  u64('totalPnlPc'),\n  u64('totalPnlCoin'),\n  u128('poolTotalDepositPc'),\n  u128('poolTotalDepositCoin'),\n  u128('swapCoinInAmount'),\n  u128('swapPcOutAmount'),\n  u64('swapCoin2PcFee'),\n  u128('swapPcInAmount'),\n  u128('swapCoinOutAmount'),\n  u64('swapPc2CoinFee'),\n\n  publicKeyLayout('poolCoinTokenAccount'),\n  publicKeyLayout('poolPcTokenAccount'),\n  publicKeyLayout('coinMintAddress'),\n  publicKeyLayout('pcMintAddress'),\n  publicKeyLayout('lpMintAddress'),\n  publicKeyLayout('ammOpenOrders'),\n  publicKeyLayout('serumMarket'),\n  publicKeyLayout('serumProgramId'),\n  publicKeyLayout('ammTargetOrders'),\n  publicKeyLayout('poolWithdrawQueue'),\n  publicKeyLayout('poolTempLpTokenAccount'),\n  publicKeyLayout('ammOwner'),\n  publicKeyLayout('pnlOwner')\n])\n\n\n// Aggregator Accounts\nexport const PRICE_DATA = struct([\n  u32('count'),\n  u32('decimals'),\n  seq(\n    struct([\n      publicKeyLayout('token_mint'),\n      publicKeyLayout('pool_account'),\n      publicKeyLayout('base_pool_account'),\n      u64('decimals'),\n      u64('token_price'),\n      ns64('last_updated'),\n    ]),\n    MAX_TOKENS, 'prices'\n  ),\n])\n\n\nexport const FUND_PDA_DATA = struct([\n  u8('is_initialized'),\n  u8('number_of_active_investments'),\n  u8('no_of_investments'),\n  u8('signer_nonce'),\n  u8('no_of_margin_positions'),\n  u8('no_of_assets'),\n  u16('position_count'),\n\n  u8('version'),\n  u8('is_private'),\n  u16('fund_v3_index'),\n  seq(u8(), 4, 'padding'),\n\n  u64('min_amount'),\n  U64F64('min_return'),\n  U64F64('performance_fee_percentage'),\n  U64F64('total_amount'),\n  U64F64('prev_performance'),\n\n  u64('amount_in_router'),\n  U64F64('performance_fee'),\n  publicKeyLayout('manager_account'),\n  publicKeyLayout('fund_pda'),\n  seq(\n    struct([\n      u8('is_active'),\n      seq(u8(),3,'index'),\n      u8('mux'),\n      u8('is_on_mango'),\n      seq(u8(), 2, 'padding'),\n      u64('balance'),\n      u64('debt'),\n      publicKeyLayout('vault')\n    ]),\n    NUM_TOKENS, 'tokens'\n  ),\n  seq(publicKeyLayout(), MAX_INVESTORS, 'investors'),\n  \n  struct([\n      publicKeyLayout('mango_account'),\n      seq(u8(),3,'perp_markets'),\n      u8('padding'),\n      u8('deposit_index'),\n      u8('markets_active'),\n      u8('deposits_active'),\n      u8('xpadding'),\n      seq(u64(), 2, 'investor_debts'),\n      seq(u8('padding'), 24),\n    ],'mango_positions'),\n\n  \n  struct([\n      u8('is_active'),\n      u8('is_split'),\n      u8('hop'),\n      u8('count'),\n      u8('token_in_slot'),\n      u8('token_out_slot'),\n      seq(u8('padding'), 2),\n   \n      publicKeyLayout('token_in'),\n      publicKeyLayout('token_out'),\n      u64('amount_in'),\n      u64('min_amount_out'),\n  ],'guard'),\n  \n  seq(u8(), 24, 'margin_update_padding'),\n  seq(u8(), 2024, 'migration_additonal_padding'),\n])"]},"metadata":{},"sourceType":"module"}