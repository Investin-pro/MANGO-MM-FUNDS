{"ast":null,"code":"var _jsxFileName = \"/Users/zohebshahzan/code/Solana-2/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Container } from 'reactstrap';\nimport { CustomNavbar } from './components/CustomNavbar';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { GlobalState } from './store/globalState';\nimport { getTransactions } from './utils/getTransactions';\nimport { connection } from './utils/constants';\nimport TransactionsView from './components/Transactions';\nimport { SendGreating } from './components/SendGreating';\nimport { Deposit } from './components/Deposit';\nimport { InitialisedFund } from './components/InitialisedFund';\nimport { DisplayInfo } from './components/DisplayInfo';\nimport { Swap } from './components/Swap';\nimport { OrcaSwap } from './components/OrcaSwap';\nimport { Withdraw } from './components/Withdraw';\nimport { Transfer } from './components/Transfer';\nimport { Claim } from './components/ClaimFee';\nimport { Testing } from './components/Testing';\nimport { GetPrices } from './components/GetPrices';\nimport { MangoInitialize } from './components/MangoInitialize';\nimport { MangoPlaceOrder } from './components/MangoPlaceOrder';\nimport { AdminControl } from './components/AdminControl';\nimport { AllFundsInvestors } from './components/AllFundsInvestors';\nimport { MigrateState } from './components/MigrateFundState';\nimport { UpdateAllTokenPrices } from './components/UpdateAllFundTokenPrices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const walletProvider = GlobalState.useState(s => s.walletProvider);\n  const address = GlobalState.useState(s => s.address);\n  const [transactions, setTransactions] = useState([]); // useEffect(() => {\n  //   if (walletProvider?.publicKey) {\n  //     console.log(`walletProvider?.publicKey ::: `, walletProvider?.publicKey)\n  //     getTransactions(connection, walletProvider.publicKey).then((trans) => {\n  //       console.log(`trans ::: `, trans)\n  //       setTransactions(trans);\n  //     });\n  //   }\n  // }, [walletProvider])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), address && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected to \", address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SendGreating, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DisplayInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MigrateState, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InitialisedFund, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Deposit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Transfer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(GetPrices, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Swap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UpdateAllTokenPrices, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Withdraw, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Claim, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MangoInitialize, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MangoPlaceOrder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AllFundsInvestors, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"U0r3xPwJmzdHjClAdxvOdRzCc3c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/zohebshahzan/code/Solana-2/frontend/src/App.js"],"names":["Container","CustomNavbar","useEffect","useState","GlobalState","getTransactions","connection","TransactionsView","SendGreating","Deposit","InitialisedFund","DisplayInfo","Swap","OrcaSwap","Withdraw","Transfer","Claim","Testing","GetPrices","MangoInitialize","MangoPlaceOrder","AdminControl","AllFundsInvestors","MigrateState","UpdateAllTokenPrices","App","walletProvider","s","address","transactions","setTransactions"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAO,WAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,WAAT,QAA4B,0BAA5B;AAEA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,oBAAT,QAAqC,uCAArC;;;AAMA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,cAAc,GAAGtB,WAAW,CAACD,QAAZ,CAAqBwB,CAAC,IAAIA,CAAC,CAACD,cAA5B,CAAvB;AACA,QAAME,OAAO,GAAGxB,WAAW,CAACD,QAAZ,CAAqBwB,CAAC,IAAIA,CAAC,CAACC,OAA5B,CAAhB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC3B,QAAQ,CAAC,EAAD,CAAhD,CAHa,CAKb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAGIyB,OAAO,iBACP;AAAA,oCAAiBA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eASE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAbF,eAcC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAdD,eAeE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,cAjBF,eAsBE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAtBF,eAuBE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAvBF,eAwBE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAxBF,eA0BE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cA1BF,eA4BE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GAjDQH,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import { Container } from 'reactstrap';\nimport { CustomNavbar } from './components/CustomNavbar';\nimport './App.css';\nimport { useEffect, useState } from 'react';\n\nimport { GlobalState } from './store/globalState'\nimport { getTransactions } from './utils/getTransactions';\nimport { connection } from './utils/constants';\nimport TransactionsView from './components/Transactions';\nimport { SendGreating } from './components/SendGreating';\nimport { Deposit } from './components/Deposit';\nimport { InitialisedFund } from './components/InitialisedFund';\nimport { DisplayInfo } from './components/DisplayInfo';\n\nimport { Swap } from './components/Swap';\nimport { OrcaSwap } from './components/OrcaSwap';\n\nimport { Withdraw } from './components/Withdraw';\nimport { Transfer } from './components/Transfer';\nimport { Claim } from './components/ClaimFee';\nimport { Testing } from './components/Testing';\nimport { GetPrices } from './components/GetPrices';\nimport { MangoInitialize } from './components/MangoInitialize';\nimport { MangoPlaceOrder } from './components/MangoPlaceOrder';\nimport { AdminControl } from './components/AdminControl';\nimport { AllFundsInvestors } from './components/AllFundsInvestors';\nimport { MigrateState } from './components/MigrateFundState';\nimport { UpdateAllTokenPrices } from './components/UpdateAllFundTokenPrices';\n\n\n\n\n\nfunction App() {\n  const walletProvider = GlobalState.useState(s => s.walletProvider);\n  const address = GlobalState.useState(s => s.address);\n  const [transactions, setTransactions] = useState([]);\n\n  // useEffect(() => {\n  //   if (walletProvider?.publicKey) {\n  //     console.log(`walletProvider?.publicKey ::: `, walletProvider?.publicKey)\n  //     getTransactions(connection, walletProvider.publicKey).then((trans) => {\n  //       console.log(`trans ::: `, trans)\n  //       setTransactions(trans);\n  //     });\n  //   }\n  // }, [walletProvider])\n\n  return (\n    <div>\n      <Container>\n        <CustomNavbar />\n        {\n          address &&\n          <p>Connected to {address}</p>\n        }\n        {/* {\n          transactions && <TransactionsView transactions={transactions} />\n        } */}\n        <SendGreating />\n        <DisplayInfo/>\n        <MigrateState/>\n        <InitialisedFund />\n        <Deposit />\n\t      <Transfer />\n        <GetPrices />\n        <Swap />\n        <UpdateAllTokenPrices/>\n\n        {/* <OrcaSwap /> */}\n        {/* <Testing /> */}\n\n        <Withdraw />\n        <Claim />\n        <MangoInitialize />\n\n        <MangoPlaceOrder />\n        {/* <AdminControl /> */}\n        <AllFundsInvestors/>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}