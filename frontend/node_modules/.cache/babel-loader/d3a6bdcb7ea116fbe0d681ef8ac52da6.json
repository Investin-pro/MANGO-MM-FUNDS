{"ast":null,"code":"var _jsxFileName = \"/Users/zohebshahzan/code/Solana-2/frontend/src/components/AdminControl.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { createAssociatedTokenAccount, createAssociatedTokenAccountIfNotExist, createKeyIfNotExists, createTokenAccountIfNotExist, findAssociatedTokenAddress, setWalletTransaction, signAndSendTransaction } from '../utils/web3';\nimport { connection, FUND_ACCOUNT_KEY, idsIndex, platformStateAccount, PLATFORM_ACCOUNT_KEY, programId } from '../utils/constants';\nimport { GlobalState } from '../store/globalState';\nimport { nu64, struct, u8 } from 'buffer-layout';\nimport { PublicKey, SYSVAR_CLOCK_PUBKEY, Transaction, TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '@project-serum/serum/lib/token-instructions';\nimport { FUND_DATA, PLATFORM_DATA, U64F64 } from '../utils/programLayouts';\nimport { Badge } from 'reactstrap';\nimport { TOKENS } from \"../utils/tokens\";\nimport BN from 'bn.js';\nimport { Card, Col, Row } from 'reactstrap';\nimport { IDS } from '@blockworks-foundation/mango-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AdminControl = () => {\n  _s();\n\n  var _platformData$investi, _platformData$investi2, _platformData$router;\n\n  const ids = IDS['groups'][idsIndex];\n  const walletProvider = GlobalState.useState(s => s.walletProvider);\n  const [v0, setv0] = useState(0);\n  const [v1, setv1] = useState(0);\n  const [v2, setv2] = useState(0);\n  const [v3, setv3] = useState(0);\n  const [v4, setv4] = useState(0);\n  const [v5, setv5] = useState(0);\n  const [min_amount, setMin_amount] = useState(0);\n  const [min_return, setMin_return] = useState(0);\n  const [platform_fee_percentage, setPlatform_fee_percentage] = useState(0);\n  const [platformData, setPlatformData] = useState(0);\n  const [tokenId, setTokenId] = useState(0);\n  const [pcIndex, setPcIndex] = useState(0);\n  const [mintAddress, setMintAddress] = useState('11111111111111111111111111111111');\n  const [poolCoinAddress, setPoolCoinAddress] = useState('11111111111111111111111111111111');\n  const [poolPcAddress, setPoolPcAddress] = useState('11111111111111111111111111111111');\n  useEffect(() => {\n    (async () => {\n      // to find initially \n      // const platformAccount = await PublicKey.createWithSeed(\n      //   walletProvider.publicKey,\n      //   PLATFORM_ACCOUNT_KEY,\n      //   programId,\n      // );\n      // console.log(\"platformAccount acc to user::\",platformAccount.toBase58())\n      const platformDataAcc = await connection.getAccountInfo(platformStateAccount);\n\n      if (!platformDataAcc) {\n        alert('platform state not initilaized');\n        return;\n      }\n\n      const platformData = PLATFORM_DATA.decode(platformDataAcc.data);\n      console.log(\"platformData::\", platformData);\n      setPlatformData(platformData);\n    })();\n  }, [walletProvider]);\n\n  const getPlatformState = async () => {\n    const platformDataAcc = await connection.getAccountInfo(platformStateAccount);\n\n    if (!platformDataAcc) {\n      alert('platform state not initilaized');\n      return;\n    }\n\n    const platformData = PLATFORM_DATA.decode(platformDataAcc.data);\n    console.log(\"platformData::\", platformData);\n    setPlatformData(platformData);\n  };\n\n  const handleAdminControl = async () => {\n    console.log(\"handle initalise fund clicked\");\n    const transaction = new Transaction(); // ***what should be in the place of wallet provider in platformAccount\n\n    const platformAccount = await createKeyIfNotExists(walletProvider, \"\", programId, PLATFORM_ACCOUNT_KEY, PLATFORM_DATA.span, transaction);\n    console.log(`PLATFORM_DATA.span :::: `, PLATFORM_DATA.span);\n    const dataLayout = struct([u8('instruction'), u8('intialize_platform'), u8('freeze_platform'), u8('unfreeze_platform'), u8('change_vault'), u8('freeze_fund'), u8('unfreeze_fund'), nu64('change_min_amount'), nu64('change_min_return'), nu64('change_perf_fee')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 7,\n      intialize_platform: v0,\n      freeze_platform: v1,\n      unfreeze_platform: v2,\n      change_vault: v3,\n      freeze_fund: v4,\n      unfreeze_fund: v5,\n      min_amount: min_amount * 10 ** ids.tokens[0].decimals,\n      min_return: new BN(min_return),\n      performance_fee_percentage: new BN(platform_fee_percentage)\n    }, data);\n    const associatedTokenAddress1 = await createAssociatedTokenAccountIfNotExist(walletProvider, new PublicKey(ids.tokens[0].mintKey), walletProvider === null || walletProvider === void 0 ? void 0 : walletProvider.publicKey, transaction);\n    const instruction = new TransactionInstruction({\n      keys: [{\n        pubkey: platformAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: walletProvider === null || walletProvider === void 0 ? void 0 : walletProvider.publicKey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: associatedTokenAddress1,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: new PublicKey(ids.tokens[0].mintKey),\n        isSigner: false,\n        isWritable: true\n      } // { pubkey: fundAccount, isSigner: false, isWritable: true },\n      ],\n      programId,\n      data\n    });\n    console.log(\"platformAccount:\", platformAccount.toBase58());\n    console.log(\"associatedTokenAddress1:\", associatedTokenAddress1.toBase58());\n    console.log(\"vault usdc :\", ids.tokens[0].mintKey);\n    transaction.add(instruction);\n    transaction.feePayer = walletProvider === null || walletProvider === void 0 ? void 0 : walletProvider.publicKey;\n    let hash = await connection.getRecentBlockhash();\n    console.log(\"blockhash\", hash);\n    transaction.recentBlockhash = hash.blockhash;\n    const sign = await signAndSendTransaction(walletProvider, transaction);\n    console.log(\"signature tx:: \", sign);\n    console.log(\"signature tx url:: \", `https://solscan.io/tx/${sign}`);\n  };\n\n  const handleTokenWhitelist = async () => {\n    console.log(\"handleTokenWhitelist \");\n    const transaction = new Transaction();\n    const dataLayout = struct([u8('instruction'), u8('token_id'), u8('pc_index')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 17,\n      token_id: tokenId,\n      pc_index: pcIndex\n    }, data);\n    const instruction = new TransactionInstruction({\n      keys: [{\n        pubkey: platformStateAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: walletProvider === null || walletProvider === void 0 ? void 0 : walletProvider.publicKey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: new PublicKey(mintAddress),\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: new PublicKey(poolCoinAddress),\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: new PublicKey(poolPcAddress),\n        isSigner: false,\n        isWritable: false\n      } // { pubkey: fundAccount, isSigner: false, isWritable: true },\n      ],\n      programId,\n      data\n    });\n    transaction.add(instruction);\n    transaction.feePayer = walletProvider === null || walletProvider === void 0 ? void 0 : walletProvider.publicKey;\n    let hash = await connection.getRecentBlockhash();\n    console.log(\"blockhash\", hash);\n    transaction.recentBlockhash = hash.blockhash;\n    const sign = await signAndSendTransaction(walletProvider, transaction);\n    console.log(\"signature tx:: \", sign);\n    console.log(\"signature tx url:: \", `https://solscan.io/tx/${sign}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-div\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: \"6\",\n          xs: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Admin Controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 7\n          }, this), \"init_platform ::: \", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: v0,\n            onChange: event => setv0(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 7\n          }, this), \"freeze_platform ::: \", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: v1,\n            onChange: event => setv1(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 7\n          }, this), \"unfreeze_platform ::: \", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: v2,\n            onChange: event => setv2(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 7\n          }, this), \"change_vault ::: \", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: v3,\n            onChange: event => setv3(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 7\n          }, this), \"freeze_fund ::: \", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: v4,\n            onChange: event => setv4(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 7\n          }, this), \"unfreeze_fund ::: \", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: v5,\n            onChange: event => setv5(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 7\n          }, this), \"min_amount ::: \", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: min_amount,\n            onChange: event => setMin_amount(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 7\n          }, this), \"min_return ::: \", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: min_return,\n            onChange: event => setMin_return(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 7\n          }, this), \"platform_fee_percentage ::: \", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: platform_fee_percentage,\n            onChange: event => setPlatform_fee_percentage(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAdminControl,\n            children: \"Admin Control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 19\n          }, this), \"token_id ::: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: tokenId,\n            onChange: event => setTokenId(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 112\n          }, this), \"pc_index ::: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: pcIndex,\n            onChange: event => setPcIndex(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 112\n          }, this), \"token mint ::: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            style: {\n              width: \"500px\"\n            },\n            value: mintAddress,\n            onChange: event => setMintAddress(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 145\n          }, this), \"poolCoinAddress  ::: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            style: {\n              width: \"500px\"\n            },\n            value: poolCoinAddress,\n            onChange: event => setPoolCoinAddress(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 159\n          }, this), \"poolPCAddress  ::: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            style: {\n              width: \"500px\"\n            },\n            value: poolPcAddress,\n            onChange: event => setPoolPcAddress(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 153\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleTokenWhitelist,\n            children: \"whitelist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: \"6\",\n          xs: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Platform State \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"version : \", platformData === null || platformData === void 0 ? void 0 : platformData.version]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"total_v3_funds : \", platformData === null || platformData === void 0 ? void 0 : platformData.total_v3_funds]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"investin_admin : \", platformData === null || platformData === void 0 ? void 0 : (_platformData$investi = platformData.investin_admin) === null || _platformData$investi === void 0 ? void 0 : _platformData$investi.toBase58()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"investin_vault : \", platformData === null || platformData === void 0 ? void 0 : (_platformData$investi2 = platformData.investin_vault) === null || _platformData$investi2 === void 0 ? void 0 : _platformData$investi2.toBase58()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"router : \", platformData === null || platformData === void 0 ? void 0 : (_platformData$router = platformData.router) === null || _platformData$router === void 0 ? void 0 : _platformData$router.toBase58()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"router_nonce : \", platformData === null || platformData === void 0 ? void 0 : platformData.router_nonce]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"is_initialized : \", platformData === null || platformData === void 0 ? void 0 : platformData.is_initialized]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"no_of_active_funds : \", platformData === null || platformData === void 0 ? void 0 : platformData.no_of_active_funds]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"token_count : \", platformData === null || platformData === void 0 ? void 0 : platformData.token_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: getPlatformState,\n            children: \"GET PLATFORM STATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminControl, \"IMZUhe7eeCMFWqbmrwDCvxuCMYc=\");\n\n_c = AdminControl;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminControl\");","map":{"version":3,"sources":["/Users/zohebshahzan/code/Solana-2/frontend/src/components/AdminControl.js"],"names":["React","useEffect","useState","createAssociatedTokenAccount","createAssociatedTokenAccountIfNotExist","createKeyIfNotExists","createTokenAccountIfNotExist","findAssociatedTokenAddress","setWalletTransaction","signAndSendTransaction","connection","FUND_ACCOUNT_KEY","idsIndex","platformStateAccount","PLATFORM_ACCOUNT_KEY","programId","GlobalState","nu64","struct","u8","PublicKey","SYSVAR_CLOCK_PUBKEY","Transaction","TransactionInstruction","TOKEN_PROGRAM_ID","FUND_DATA","PLATFORM_DATA","U64F64","Badge","TOKENS","BN","Card","Col","Row","IDS","AdminControl","ids","walletProvider","s","v0","setv0","v1","setv1","v2","setv2","v3","setv3","v4","setv4","v5","setv5","min_amount","setMin_amount","min_return","setMin_return","platform_fee_percentage","setPlatform_fee_percentage","platformData","setPlatformData","tokenId","setTokenId","pcIndex","setPcIndex","mintAddress","setMintAddress","poolCoinAddress","setPoolCoinAddress","poolPcAddress","setPoolPcAddress","platformDataAcc","getAccountInfo","alert","decode","data","console","log","getPlatformState","handleAdminControl","transaction","platformAccount","span","dataLayout","Buffer","alloc","encode","instruction","intialize_platform","freeze_platform","unfreeze_platform","change_vault","freeze_fund","unfreeze_fund","tokens","decimals","performance_fee_percentage","associatedTokenAddress1","mintKey","publicKey","keys","pubkey","isSigner","isWritable","toBase58","add","feePayer","hash","getRecentBlockhash","recentBlockhash","blockhash","sign","handleTokenWhitelist","token_id","pc_index","event","target","value","width","version","total_v3_funds","investin_admin","investin_vault","router","router_nonce","is_initialized","no_of_active_funds","token_count"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { createAssociatedTokenAccount, createAssociatedTokenAccountIfNotExist, createKeyIfNotExists, createTokenAccountIfNotExist, findAssociatedTokenAddress, setWalletTransaction, signAndSendTransaction } from '../utils/web3'\nimport { connection, FUND_ACCOUNT_KEY, idsIndex, platformStateAccount, PLATFORM_ACCOUNT_KEY, programId } from '../utils/constants'\nimport { GlobalState } from '../store/globalState';\nimport { nu64, struct, u8 } from 'buffer-layout';\nimport { PublicKey, SYSVAR_CLOCK_PUBKEY, Transaction, TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '@project-serum/serum/lib/token-instructions';\nimport { FUND_DATA, PLATFORM_DATA, U64F64 } from '../utils/programLayouts';\nimport { Badge } from 'reactstrap';\nimport {  TOKENS } from \"../utils/tokens\";\nimport BN from 'bn.js';\nimport { Card, Col, Row } from 'reactstrap';\nimport { IDS } from '@blockworks-foundation/mango-client';\n\nexport const AdminControl = () => {\n\n  const ids= IDS['groups'][idsIndex];\n\n  const walletProvider = GlobalState.useState(s => s.walletProvider);\n\n  const [v0, setv0] = useState(0);\n  const [v1, setv1] = useState(0);\n  const [v2, setv2] = useState(0);\n  const [v3, setv3] = useState(0);\n  const [v4, setv4] = useState(0);\n  const [v5, setv5] = useState(0);\n\n  const [min_amount, setMin_amount] = useState(0);\n  const [min_return, setMin_return] = useState(0);\n  const [platform_fee_percentage, setPlatform_fee_percentage] = useState(0);\n  const [platformData, setPlatformData] = useState(0)\n\n  const [tokenId, setTokenId] = useState(0)\n  const [pcIndex, setPcIndex] = useState(0)\n  const [mintAddress, setMintAddress] = useState('11111111111111111111111111111111')\n  const [poolCoinAddress, setPoolCoinAddress] = useState('11111111111111111111111111111111')\n  const [poolPcAddress, setPoolPcAddress] = useState('11111111111111111111111111111111')\n\n  useEffect(  ()=> {\n    (async () => {\n      // to find initially \n      // const platformAccount = await PublicKey.createWithSeed(\n      //   walletProvider.publicKey,\n      //   PLATFORM_ACCOUNT_KEY,\n      //   programId,\n      // );\n        // console.log(\"platformAccount acc to user::\",platformAccount.toBase58())\n       const platformDataAcc = await connection.getAccountInfo(platformStateAccount)\n       if(!platformDataAcc){\n         alert('platform state not initilaized');\n         return;\n       } \n        const platformData = PLATFORM_DATA.decode(platformDataAcc.data)\n        console.log(\"platformData::\",platformData);\n        setPlatformData(platformData)\n    })()\n    \n  },[walletProvider])\n\n  const getPlatformState = async () =>{\n    const platformDataAcc = await connection.getAccountInfo(platformStateAccount)\n       if(!platformDataAcc){\n         alert('platform state not initilaized');\n         return;\n       } \n        const platformData = PLATFORM_DATA.decode(platformDataAcc.data)\n        console.log(\"platformData::\",platformData);\n        setPlatformData(platformData)\n  }\n\n  const handleAdminControl = async () => {\n    console.log(\"handle initalise fund clicked\")\n\n    const transaction = new Transaction()\n\n    // ***what should be in the place of wallet provider in platformAccount\n    const platformAccount = await createKeyIfNotExists(walletProvider, \"\", programId, PLATFORM_ACCOUNT_KEY, PLATFORM_DATA.span, transaction)\n\n    console.log(`PLATFORM_DATA.span :::: `, PLATFORM_DATA.span)\n\n      const dataLayout = struct([\n        u8('instruction'),\n        u8('intialize_platform'),\n        u8('freeze_platform'),\n        u8('unfreeze_platform'),\n        u8('change_vault'),\n        u8('freeze_fund'),\n        u8('unfreeze_fund'),\n        nu64('change_min_amount'),\n        nu64('change_min_return'),\n        nu64('change_perf_fee')\n      ])\n\n      const data = Buffer.alloc(dataLayout.span)\n      dataLayout.encode(\n        {\n          instruction: 7,\n          intialize_platform: v0,\n          freeze_platform: v1,\n          unfreeze_platform: v2,\n          change_vault: v3,\n          freeze_fund: v4,\n          unfreeze_fund: v5,\n          min_amount: min_amount * (10 ** ids.tokens[0].decimals),\n          min_return: new BN(min_return),\n          performance_fee_percentage: new BN(platform_fee_percentage),\n        },\n        data\n      )\n      const associatedTokenAddress1 = await createAssociatedTokenAccountIfNotExist(walletProvider, new PublicKey(ids.tokens[0].mintKey), walletProvider?.publicKey, transaction);\n\n      const instruction = new TransactionInstruction({\n        keys: [\n          { pubkey: platformAccount, isSigner: false, isWritable: true },\n          { pubkey: walletProvider?.publicKey, isSigner: true, isWritable: true },\n          { pubkey: associatedTokenAddress1, isSigner: false, isWritable: true },\n          { pubkey: new PublicKey(ids.tokens[0].mintKey), isSigner: false, isWritable: true },\n\n          // { pubkey: fundAccount, isSigner: false, isWritable: true },\n        ],\n        programId,\n        data\n      });\n\n      console.log(\"platformAccount:\",platformAccount.toBase58())\n      console.log(\"associatedTokenAddress1:\",associatedTokenAddress1.toBase58())\n      console.log(\"vault usdc :\",ids.tokens[0].mintKey)\n    \n\n      transaction.add(instruction)\n      transaction.feePayer = walletProvider?.publicKey;\n      let hash = await connection.getRecentBlockhash();\n      console.log(\"blockhash\", hash);\n      transaction.recentBlockhash = hash.blockhash;\n\n      const sign = await signAndSendTransaction(walletProvider, transaction);\n      console.log(\"signature tx:: \", sign)\n      console.log(\"signature tx url:: \", `https://solscan.io/tx/${sign}`) \n  } \n\n  const handleTokenWhitelist = async () => {\n    console.log(\"handleTokenWhitelist \")\n\n    const transaction = new Transaction()\n    const dataLayout = struct([\n      u8('instruction'),\n      u8('token_id'),\n      u8('pc_index')\n    ])\n\n    const data = Buffer.alloc(dataLayout.span)\n    dataLayout.encode(\n      {\n        instruction: 17,\n        token_id: tokenId,\n        pc_index: pcIndex,\n      },\n      data\n    )\n\n    const instruction = new TransactionInstruction({\n      keys: [\n        { pubkey: platformStateAccount, isSigner: false, isWritable: true },\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable:true},\n        { pubkey: walletProvider?.publicKey, isSigner: true, isWritable: true },\n        { pubkey: new PublicKey(mintAddress), isSigner: false, isWritable: false },\n        { pubkey: new PublicKey(poolCoinAddress), isSigner: false, isWritable: false },\n        { pubkey: new PublicKey(poolPcAddress), isSigner: false, isWritable: false },\n\n        // { pubkey: fundAccount, isSigner: false, isWritable: true },\n      ],\n      programId,\n      data\n    });\n\n    transaction.add(instruction)\n    transaction.feePayer = walletProvider?.publicKey;\n    let hash = await connection.getRecentBlockhash();\n    console.log(\"blockhash\", hash);\n    transaction.recentBlockhash = hash.blockhash;\n\n    const sign = await signAndSendTransaction(walletProvider, transaction);\n    console.log(\"signature tx:: \", sign)\n    console.log(\"signature tx url:: \", `https://solscan.io/tx/${sign}`) \n  }\n\n  return (\n    <div className=\"form-div\">\n       <Card className=\"justify-content-center\">\n            <Row className=\"justify-content-between\">\n       <Col lg=\"6\" xs=\"6\">\n      <h4>Admin Controls</h4>\n      init_platform ::: {' '}\n      <input type=\"number\" value={v0} onChange={(event) => setv0(event.target.value)} />\n      <br />\n      freeze_platform ::: {' '}\n      <input type=\"number\" value={v1} onChange={(event) => setv1(event.target.value)} />\n      <br />\n      unfreeze_platform ::: {' '}\n      <input type=\"number\" value={v2} onChange={(event) => setv2(event.target.value)} />\n      <br />\n      change_vault ::: {' '}\n      <input type=\"number\" value={v3} onChange={(event) => setv3(event.target.value)} />\n      <br />\n      freeze_fund ::: {' '}\n      <input type=\"number\" value={v4} onChange={(event) => setv4(event.target.value)} />\n      <br />\n      unfreeze_fund ::: {' '}\n      <input type=\"number\" value={v5} onChange={(event) => setv5(event.target.value)} />\n      <br />\n\n      min_amount ::: {' '}\n      <input type=\"number\" value={min_amount} onChange={(event) => setMin_amount(event.target.value)} />\n      <br />\n      min_return ::: {' '}\n      <input type=\"number\" value={min_return} onChange={(event) => setMin_return(event.target.value)} />\n      <br />\n      platform_fee_percentage ::: {' '}\n      <input type=\"number\" value={platform_fee_percentage} onChange={(event) => setPlatform_fee_percentage(event.target.value)} />\n      <br />\n      <button onClick={handleAdminControl}>Admin Control</button>\n      <br /><br /><hr/>\n      token_id ::: <input type=\"number\" value={tokenId} onChange={(event) => setTokenId(event.target.value)} /><br />\n      pc_index ::: <input type=\"number\" value={pcIndex} onChange={(event) => setPcIndex(event.target.value)} /><br />\n      token mint ::: <input type=\"text\" style={{width :\"500px\"}} value={mintAddress} onChange={(event) => setMintAddress(event.target.value)} /><br />\n      poolCoinAddress  ::: <input type=\"text\" style={{width :\"500px\"}} value={poolCoinAddress} onChange={(event) => setPoolCoinAddress(event.target.value)} /><br />\n      poolPCAddress  ::: <input type=\"text\" style={{width :\"500px\"}} value={poolPcAddress} onChange={(event) => setPoolPcAddress(event.target.value)} /><br />\n      <button onClick={handleTokenWhitelist}>whitelist</button>\n      </Col>\n\n      <Col lg=\"6\" xs=\"6\">\n      <h4>Platform State </h4>\n      <p>version : {platformData?.version}</p>\n      <p>total_v3_funds : {platformData?.total_v3_funds}</p>\n\n        <p>investin_admin : {platformData?.investin_admin?.toBase58()}</p>\n        <p>investin_vault : {platformData?.investin_vault?.toBase58()}</p>\n        <p>router : {platformData?.router?.toBase58()}</p>\n        <p>router_nonce : {platformData?.router_nonce}</p>\n        <p>is_initialized : {platformData?.is_initialized}</p>\n        <p>no_of_active_funds : {platformData?.no_of_active_funds}</p>\n        <p>token_count : {platformData?.token_count}</p>\n        <br />\n        <button onClick={getPlatformState}>GET PLATFORM STATE</button>\n        {/* <table>\n          \n           {\n             platformData?.token_list && \n\n             platformData?.token_list.map((i)=>{\n                return <tr key={i?.mint?.toBase58()}>\n                  <td >{i?.mint?.toBase58()}</td>\n                  <td>{i?.pool_price?.toString()}</td>\n                </tr>\n             })\n           }\n           </table> */}\n      </Col>\n            </Row>\n      </Card>\n    </div>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}